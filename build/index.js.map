{"version":3,"file":"index.js","mappings":"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;AACF;;;;;;;;;;;AC1CA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,kCAAkC;AAC3E;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwB;AACxB;;;;;;;;;;;;;;;;;UCzHA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;ACNsD;AACjB;AACd;AAEG;AACA;AACU;AACE;AAEtCiE,oEAAiB,CAACC,6CAAa,EAAE;EAChC/G,KAAK,EAAE7D,mDAAE,CAAC4K,8CAAc,CAAC;EACzBjK,IAAI,EAAEiK,6CAAa;EACnBC,QAAQ,EAAED,iDAAiB;EAC3BE,WAAW,EAAE9K,mDAAE,CAAC4K,oDAAoB,CAAC;EACrCG,QAAQ,EAAE;IACTC,IAAI,EAAE,IAAI;IACVjE,SAAS,EAAE;EACZ,CAAC;EACD5G,UAAU,EAAEyK,mDAAmB;EAC/B7C,UAAU;EACVkD,IAAI,EAAEnG,6CAAI;EACVoG,IAAI,EAAE7D,6CAAIA;AAEX,CAAC,CAAC,C","sources":["webpack://andika/./src/components/blockcontrols.js","webpack://andika/./src/components/blockhandler.js","webpack://andika/./src/components/inspectorcontrols.js","webpack://andika/./src/edit.js","webpack://andika/./src/save.js","webpack://andika/./src/transforms.js","webpack://andika/./src/utils/andika-ai.js","webpack://andika/./src/editor.scss","webpack://andika/external window [\"wp\",\"blockEditor\"]","webpack://andika/external window [\"wp\",\"blocks\"]","webpack://andika/external window [\"wp\",\"components\"]","webpack://andika/external window [\"wp\",\"data\"]","webpack://andika/external window [\"wp\",\"element\"]","webpack://andika/external window [\"wp\",\"i18n\"]","webpack://andika/./node_modules/eventsource-parser/dist/index.js","webpack://andika/webpack/bootstrap","webpack://andika/webpack/runtime/compat get default export","webpack://andika/webpack/runtime/define property getters","webpack://andika/webpack/runtime/hasOwnProperty shorthand","webpack://andika/webpack/runtime/make namespace object","webpack://andika/./src/index.js"],"sourcesContent":["import { AlignmentToolbar, BlockControls } from '@wordpress/block-editor';\r\nimport { ToolbarGroup, ToolbarButton, Spinner } from '@wordpress/components';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nfunction AndikaBlockControls( props ) {\r\n    const {\r\n        attributes,\r\n        setAttributes,\r\n        isLoading,\r\n        onGenerateClick,\r\n    } = props;\r\n\r\n    return (\r\n        <BlockControls>\r\n            <ToolbarGroup>\r\n                <AlignmentToolbar\r\n                    value={attributes.alignment}\r\n                    onChange={(alignment) => setAttributes({ alignment })}\r\n                />\r\n                <ToolbarButton\r\n                    icon={isLoading ? <Spinner /> : 'lightbulb'}\r\n                    label={__('Generate Text', 'andika')}\r\n                    onClick={onGenerateClick}\r\n                    disabled={isLoading}\r\n                />\r\n            </ToolbarGroup>\r\n        \r\n        </BlockControls>\r\n    );\r\n};\r\n\r\nexport default AndikaBlockControls;\r\n","import { createBlock } from '@wordpress/blocks';\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport { store as blockEditorStore } from '@wordpress/block-editor';\r\n\r\nexport const AndikaBlockHandler = (attributes, content, setAttributes, setContent) => {\r\n  const { replaceBlocks, removeBlock } = useDispatch(blockEditorStore);\r\n  const {\r\n    getBlock,   \r\n    getBlockOrder,\r\n    getBlockIndex,\r\n  } = useSelect((select) => select(blockEditorStore), []);\r\n \r\n  const onSplit = (value, isOriginal) => {\r\n    if (isOriginal) {\r\n      const updatedContent = content.slice(0, content.indexOf(value));\r\n      setAttributes({ content: updatedContent });\r\n      setContent(updatedContent);\r\n    }\r\n\r\n    const newAttributes = {\r\n      ...attributes,\r\n      content: value,\r\n    };\r\n\r\n    const block = createBlock(\"andika-block/andika\", newAttributes);\r\n    return block;\r\n  };\r\n\r\n  const onReplace = (blocks, clientId) => {\r\n    replaceBlocks(clientId, blocks.map((block, index) =>\r\n      (index === 0 && block.name === \"andika-block/andika\")\r\n        ? {\r\n            ...block,\r\n            ...attributes,\r\n            ...block.attributes,\r\n          }\r\n        : block\r\n    ));\r\n  };\r\n\r\n  const onMerge = (clientId) => {\r\n    const blockIndex = getBlockIndex(clientId);\r\n    const blockOrder = getBlockOrder();\r\n  \r\n    // Merge with the previous block\r\n    const prevBlockIndex = blockIndex - 1;\r\n    const prevBlockClientId = blockOrder[prevBlockIndex];\r\n  \r\n    if (prevBlockClientId) {\r\n      const prevBlock = getBlock(prevBlockClientId);\r\n  \r\n      if (prevBlock.name === \"andika-block/andika\") {\r\n        const mergedContent = prevBlock.attributes.content + content;\r\n  \r\n        setAttributes({ content: mergedContent });\r\n        setContent(mergedContent);\r\n  \r\n        removeBlock(prevBlockClientId);\r\n        return;\r\n      }\r\n    }\r\n  \r\n    // Merge with the next block\r\n    const nextBlockIndex = blockIndex + 1;\r\n    const nextBlockClientId = blockOrder[nextBlockIndex];\r\n  \r\n    if (nextBlockClientId) {\r\n      const nextBlock = getBlock(nextBlockClientId);\r\n  \r\n      if (nextBlock.name === \"andika-block/andika\") {\r\n        const mergedContent = content + nextBlock.attributes.content;\r\n  \r\n        setAttributes({ content: mergedContent });\r\n        setContent(mergedContent);\r\n  \r\n        removeBlock(nextBlockClientId);\r\n      }\r\n    }\r\n  };  \r\n \r\n  return { onSplit, onReplace, onMerge };\r\n};\r\nexport default AndikaBlockHandler;","import { __ } from '@wordpress/i18n';\r\nimport {\r\n    InspectorControls,\r\n    PanelColorSettings,\r\n    FontSizePicker,\r\n} from '@wordpress/block-editor';\r\nimport { PanelBody, RangeControl } from '@wordpress/components';\r\n\r\nconst AndikaInspectorControls = ({\r\n    attributes,\r\n    setAttributes,\r\n}) => {\r\n    const { lineHeight } = attributes;     \r\n\r\n    const onChangeLineHeight = (value) => {\r\n        setAttributes({ lineHeight: value });\r\n    };\r\n\r\n    return (\r\n        <InspectorControls>\r\n            <PanelBody title={__('Typography', 'andika')}>\r\n                <FontSizePicker\r\n                    value={attributes.fontSize}\r\n                    onChange={(value) => setAttributes({ fontSize: value })}\r\n                    __nextHasNoMarginBottom={true}\r\n                />\r\n                <RangeControl\r\n                    label={__('Line height', 'andika')}\r\n                    value={lineHeight}\r\n                    onChange={onChangeLineHeight}\r\n                    min={1}\r\n                    max={3}\r\n                    step={0.1}\r\n                />\r\n            </PanelBody>\r\n            <PanelColorSettings\r\n                title={__('Color settings', 'andika')}\r\n                initialOpen={false}\r\n                colorSettings={[\r\n                    {\r\n                        value: attributes.textColor,\r\n                        onChange: (value) => setAttributes({ textColor: value }),\r\n                        label: __('Text color', 'andika'),\r\n                    },\r\n                    {\r\n                        value: attributes.backgroundColor,\r\n                        onChange: (value) => setAttributes({ backgroundColor: value }),\r\n                        label: __('Background color', 'andika'),\r\n                    }\r\n                ]}\r\n            />\r\n\r\n        </InspectorControls>\r\n    );\r\n};\r\n\r\nexport default AndikaInspectorControls;","import { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { Fragment, useState, useCallback, useEffect, useRef} from '@wordpress/element';\nimport { RichText } from '@wordpress/block-editor';\n\nimport { generateText } from './utils/andika-ai';\n\nimport AndikaBlockHandler from './components/blockhandler';\nimport AndikaBlockControls from './components/blockcontrols';\nimport AndikaInspectorControls from './components/inspectorcontrols';\n\nexport default function Edit({ attributes, setAttributes, isSelected, clientId }) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [content, setContent] = useState(attributes.content || '');\n    const { onSplit, onMerge, onReplace } = AndikaBlockHandler(attributes, content, setAttributes, setContent);\n    const RichTextRef = useRef();\n  \n    const postTitle = useSelect((select) =>\n      select('core/editor').getEditedPostAttribute('title')\n    );\n  \n    const previousBlocks = useSelect((select) =>\n      select(blockEditorStore).getBlocks()\n    );\n  \n    const previousContent = previousBlocks.length > 0\n      ? previousBlocks\n          .slice(0, -1)\n          .map((block) => block.attributes.content)\n          .join('\\n')\n      : \n    '';\n\n    const setCaretPosition = (editableRef) => {\n      if (!editableRef.current) return;\n    \n      const range = document.createRange();\n      const sel = window.getSelection();\n      \n      if (content === '') {\n        // Set the caret to the start of the placeholder when the content is empty\n        range.setStart(editableRef.current, 0);\n      } else {\n        const lastChild = editableRef.current.lastChild;\n        if (lastChild) {\n          // Set the caret to the end of the content when content is not empty\n          range.setStartAfter(lastChild);\n        }\n      }\n      \n      range.collapse(true);\n      sel.removeAllRanges();\n      sel.addRange(range);\n      editableRef.current.focus();\n    };    \n    \n    useEffect(() => {\n      setCaretPosition(RichTextRef);\n    }, [content]);\n\n    const onGenerateClick = useCallback(async () => {\n      setIsLoading(true);\n    \n      const prompt = `Title: ${postTitle}\\n\\n${previousContent}\\n\\n${content}`;\n    \n      try {\n        await generateText(prompt, content, setContent);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    \n    }, [content, postTitle, previousContent]);         \n  \n    return (\n      <Fragment>\n        <AndikaBlockControls\n          attributes={attributes}\n          setAttributes={setAttributes}\n          isLoading={isLoading}\n          onGenerateClick={onGenerateClick}\n        />\n        <AndikaInspectorControls\n          attributes={attributes}\n          setAttributes={setAttributes}\n        />\n        <RichText\n          ref={RichTextRef}\n          tagName=\"p\"\n          value={content}\n          onChange={(newContent) => {\n            setAttributes({ content: newContent });\n          }}\n          className=\"andika-placeholder\"\n          placeholder={__(\n            'Type and click the lightbulb icon to generate text...',\n            'andika',\n          )}\n          isSelected={isSelected}\n          style={{\n            textAlign: attributes.alignment,\n            fontSize: attributes.fontSize,\n            color: attributes.textColor,\n            backgroundColor: attributes.backgroundColor,\n          }}\n          onSplit={onSplit}\n          onReplace={(blocks) => onReplace(blocks, clientId)}\n          onRemove={() => onReplace([])}\n          onMerge={() => onMerge(clientId)}\n        />\n      </Fragment>\n    );\n  }\n","import { RichText } from '@wordpress/block-editor';\n\nexport default function Save({ attributes }) {\n    return (\n        <RichText.Content\n            tagName=\"p\"\n            value={attributes.content}\n            style={{\n                textAlign: attributes.alignment,\n                fontSize: attributes.fontSize,\n                color: attributes.textColor,\n                backgroundColor: attributes.backgroundColor,\n            }}\n        />\n    );\n}\n","import { createBlock } from \"@wordpress/blocks\";\r\n\r\nconst elementToLevel = { h1: 1, h2: 2, h3: 3, h4: 4, h5: 5, h6: 6 };\r\nconst levelToElement = { 1: 'h1', 2: 'h2', 3: 'h3', 4: 'h4', 5: 'h5', 6: 'h6' };\r\n\r\nconst transforms = {\r\n    from: [\r\n        {\r\n            type:  'block',\r\n            blocks: ['core/paragraph'],\r\n            transform: ( { content }) => {\r\n                return createBlock('andika-block/andika', {\r\n                    content,\r\n                });\r\n            },\r\n        },\r\n        {\r\n            type:  'block',\r\n            blocks: ['core/heading'],\r\n            transform: ( { content, level }) => {\r\n                return createBlock('andika-block/andika', {\r\n                    content,\r\n                    element: levelToElement[level],\r\n                });\r\n            }            \r\n        },\r\n        \r\n    ],\r\n    to: [\r\n            {\r\n                type: 'block',\r\n                blocks: ['core/paragraph'],\r\n                transform: ( { content }) => {\r\n                    return createBlock('core/paragraph', {\r\n                        content,\r\n                    });\r\n                },\r\n            },\r\n            {\r\n                type: 'block',\r\n                blocks: ['core/heading'],\r\n                transform: ( { content, element }) => {\r\n                    return createBlock('core/heading', {\r\n                        content,\r\n                        level: elementToLevel.hasOwnProperty(element) ? elementToLevel[element] : 2,\r\n                    });\r\n                },                \r\n            },\r\n            \r\n        ],\r\n};   \r\n\r\n\r\nexport default transforms;","import { __ } from '@wordpress/i18n';\r\nimport { createParser } from 'eventsource-parser';\r\nimport { createBlock } from '@wordpress/blocks';\r\n\r\nexport async function generateText(prompt, content, setContent) {\r\n  const streamParam = 'stream=true';\r\n  const promptParam = `prompt=${encodeURIComponent(prompt)}`;\r\n  const nonceParam = `_wpnonce=${andika.api_nonce}`;\r\n  const url = `${andika.rest_url}andika/v1/andika-ai?${promptParam}&${streamParam}&${nonceParam}`;\r\n\r\n  try {\r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n      throw new Error(`Error fetching text from WordPress REST API: ${response.status}`);\r\n    }\r\n\r\n    const reader = response.body.getReader();\r\n    const decoder = new TextDecoder();\r\n    const parser = createParser(async (event) => {\r\n      if (event.type === 'event') {\r\n        const data = event.data;\r\n        try {\r\n          const json = JSON.parse(data);\r\n          const char = json.char;\r\n          setContent((prevContent) => prevContent + char);\r\n        } catch (e) {\r\n          console.error('Error parsing JSON:', e);\r\n        }\r\n      }\r\n    });\r\n    \r\n    while (true) {\r\n      const { done, value } = await reader.read();\r\n      if (done) {\r\n        break;\r\n      }\r\n      const decodedChunk = decoder.decode(value);\r\n      parser.feed(decodedChunk);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error in generateText:', error);\r\n  }\r\n}","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","function createParser(onParse) {\n  let isFirstChunk;\n  let buffer;\n  let startingPosition;\n  let startingFieldLength;\n  let eventId;\n  let eventName;\n  let data;\n  reset();\n  return {\n    feed,\n    reset\n  };\n  function reset() {\n    isFirstChunk = true;\n    buffer = \"\";\n    startingPosition = 0;\n    startingFieldLength = -1;\n    eventId = void 0;\n    eventName = void 0;\n    data = \"\";\n  }\n  function feed(chunk) {\n    buffer = buffer ? buffer + chunk : chunk;\n    if (isFirstChunk && hasBom(buffer)) {\n      buffer = buffer.slice(BOM.length);\n    }\n    isFirstChunk = false;\n    const length = buffer.length;\n    let position = 0;\n    let discardTrailingNewline = false;\n    while (position < length) {\n      if (discardTrailingNewline) {\n        if (buffer[position] === \"\\n\") {\n          ++position;\n        }\n        discardTrailingNewline = false;\n      }\n      let lineLength = -1;\n      let fieldLength = startingFieldLength;\n      let character;\n      for (let index = startingPosition; lineLength < 0 && index < length; ++index) {\n        character = buffer[index];\n        if (character === \":\" && fieldLength < 0) {\n          fieldLength = index - position;\n        } else if (character === \"\\r\") {\n          discardTrailingNewline = true;\n          lineLength = index - position;\n        } else if (character === \"\\n\") {\n          lineLength = index - position;\n        }\n      }\n      if (lineLength < 0) {\n        startingPosition = length - position;\n        startingFieldLength = fieldLength;\n        break;\n      } else {\n        startingPosition = 0;\n        startingFieldLength = -1;\n      }\n      parseEventStreamLine(buffer, position, fieldLength, lineLength);\n      position += lineLength + 1;\n    }\n    if (position === length) {\n      buffer = \"\";\n    } else if (position > 0) {\n      buffer = buffer.slice(position);\n    }\n  }\n  function parseEventStreamLine(lineBuffer, index, fieldLength, lineLength) {\n    if (lineLength === 0) {\n      if (data.length > 0) {\n        onParse({\n          type: \"event\",\n          id: eventId,\n          event: eventName || void 0,\n          data: data.slice(0, -1)\n          // remove trailing newline\n        });\n\n        data = \"\";\n        eventId = void 0;\n      }\n      eventName = void 0;\n      return;\n    }\n    const noValue = fieldLength < 0;\n    const field = lineBuffer.slice(index, index + (noValue ? lineLength : fieldLength));\n    let step = 0;\n    if (noValue) {\n      step = lineLength;\n    } else if (lineBuffer[index + fieldLength + 1] === \" \") {\n      step = fieldLength + 2;\n    } else {\n      step = fieldLength + 1;\n    }\n    const position = index + step;\n    const valueLength = lineLength - step;\n    const value = lineBuffer.slice(position, position + valueLength).toString();\n    if (field === \"data\") {\n      data += value ? \"\".concat(value, \"\\n\") : \"\\n\";\n    } else if (field === \"event\") {\n      eventName = value;\n    } else if (field === \"id\" && !value.includes(\"\\0\")) {\n      eventId = value;\n    } else if (field === \"retry\") {\n      const retry = parseInt(value, 10);\n      if (!Number.isNaN(retry)) {\n        onParse({\n          type: \"reconnect-interval\",\n          value: retry\n        });\n      }\n    }\n  }\n}\nconst BOM = [239, 187, 191];\nfunction hasBom(buffer) {\n  return BOM.every((charCode, index) => buffer.charCodeAt(index) === charCode);\n}\nexport { createParser };\n//# sourceMappingURL=index.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport './editor.scss';\n\nimport Edit from './edit';\nimport Save from './save';\nimport metadata from './block.json';\nimport transforms from './transforms';\n\nregisterBlockType(metadata.name, {\n\ttitle: __(metadata.title),\n\ticon: metadata.icon,\n\tcategory: metadata.category,\n\tdescription: __(metadata.description),\n\tsupports: {\n\t\thtml: true,\n\t\tclassName: false,\n\t},\n\tattributes: metadata.attributes,\n\ttransforms,\n\tedit: Edit,\n\tsave: Save,\n\t\n});\n"],"names":["AlignmentToolbar","BlockControls","ToolbarGroup","ToolbarButton","Spinner","__","AndikaBlockControls","props","attributes","setAttributes","isLoading","onGenerateClick","createElement","value","alignment","onChange","icon","label","onClick","disabled","createBlock","useDispatch","useSelect","store","blockEditorStore","AndikaBlockHandler","content","setContent","replaceBlocks","removeBlock","getBlock","getBlockOrder","getBlockIndex","select","onSplit","isOriginal","updatedContent","slice","indexOf","newAttributes","block","onReplace","blocks","clientId","map","index","name","onMerge","blockIndex","blockOrder","prevBlockIndex","prevBlockClientId","prevBlock","mergedContent","nextBlockIndex","nextBlockClientId","nextBlock","InspectorControls","PanelColorSettings","FontSizePicker","PanelBody","RangeControl","AndikaInspectorControls","_ref","lineHeight","onChangeLineHeight","title","fontSize","__nextHasNoMarginBottom","min","max","step","initialOpen","colorSettings","textColor","backgroundColor","Fragment","useState","useCallback","useEffect","useRef","RichText","generateText","Edit","isSelected","setIsLoading","RichTextRef","postTitle","getEditedPostAttribute","previousBlocks","getBlocks","previousContent","length","join","setCaretPosition","editableRef","current","range","document","createRange","sel","window","getSelection","setStart","lastChild","setStartAfter","collapse","removeAllRanges","addRange","focus","prompt","error","console","ref","tagName","newContent","className","placeholder","style","textAlign","color","onRemove","Save","Content","elementToLevel","h1","h2","h3","h4","h5","h6","levelToElement","transforms","from","type","transform","_ref2","level","element","to","_ref3","_ref4","hasOwnProperty","createParser","streamParam","promptParam","encodeURIComponent","nonceParam","andika","api_nonce","url","rest_url","response","fetch","ok","Error","status","reader","body","getReader","decoder","TextDecoder","parser","event","data","json","JSON","parse","char","prevContent","e","done","read","decodedChunk","decode","feed","registerBlockType","metadata","category","description","supports","html","edit","save"],"sourceRoot":""}