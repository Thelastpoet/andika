{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAA0E;AACG;AACxC;AAErC,SAASM,mBAAmBA,CAAEC,KAAK,EAAG;EAClC,MAAM;IACFC,UAAU;IACVC,aAAa;IACbC,SAAS;IACTC;EACJ,CAAC,GAAGJ,KAAK;EAET,OACIK,iEAAA,CAACX,kEAAa,QACVW,iEAAA,CAACV,+DAAY,QACTU,iEAAA,CAACZ,qEAAgB;IACba,KAAK,EAAEL,UAAU,CAACM,SAAU;IAC5BC,QAAQ,EAAGD,SAAS,IAAKL,aAAa,CAAC;MAAEK;IAAU,CAAC;EAAE,EACxD,EACFF,iEAAA,CAACT,gEAAa;IACVa,IAAI,EAAEN,SAAS,GAAGE,iEAAA,CAACR,0DAAO,OAAG,GAAG,WAAY;IAC5Ca,KAAK,EAAEZ,mDAAE,CAAC,eAAe,EAAE,QAAQ,CAAE;IACrCa,OAAO,EAAEP,eAAgB;IACzBQ,SAAS,EAAET,SAAU;IACrBU,QAAQ,EAAEV;EAAU,EACtB,CACS,CAEH;AAExB;AAAC;AAED,iEAAeJ,mBAAmB;;;;;;;;;;;;;;;;;;;;;AChCc;AACS;AACW;AAE7D,MAAMoB,kBAAkB,GAAGA,CAAClB,UAAU,EAAEmB,OAAO,EAAElB,aAAa,EAAEmB,UAAU,EAAEC,QAAQ,KAAK;EAC9F,MAAM;IAAEC,YAAY;IAAEC,aAAa;IAAEC;EAAY,CAAC,GAAGV,4DAAW,CAACG,0DAAgB,CAAC;EAClF,MAAM;IACJQ,QAAQ;IACRC,aAAa;IACbC;EACF,CAAC,GAAGZ,0DAAS,CAAEa,MAAM,IAAKA,MAAM,CAACX,0DAAgB,CAAC,EAAE,EAAE,CAAC;EAEvD,MAAMY,OAAO,GAAGA,CAACxB,KAAK,EAAEyB,UAAU,KAAK;IACrC,IAAIA,UAAU,EAAE;MACd,MAAMC,cAAc,GAAGZ,OAAO,CAACa,KAAK,CAAC,CAAC,EAAEb,OAAO,CAACc,OAAO,CAAC5B,KAAK,CAAC,CAAC;MAC/DJ,aAAa,CAAC;QAAEkB,OAAO,EAAEY;MAAe,CAAC,CAAC;MAC1CX,UAAU,CAACW,cAAc,CAAC;IAC5B;IAEA,MAAMG,aAAa,GAAG;MACpB,GAAGlC,UAAU;MACbmB,OAAO,EAAEd;IACX,CAAC;IAED,MAAM8B,KAAK,GAAGtB,8DAAW,CAAC,qBAAqB,EAAEqB,aAAa,CAAC;IAC/D,OAAOC,KAAK;EACd,CAAC;EAED,MAAMC,SAAS,GAAGA,CAACC,MAAM,EAAEhB,QAAQ,KAAK;IACtCE,aAAa,CAACF,QAAQ,EAAEgB,MAAM,CAACC,GAAG,CAAC,CAACH,KAAK,EAAEI,KAAK,KAC7CA,KAAK,KAAK,CAAC,IAAIJ,KAAK,CAACK,IAAI,KAAK,qBAAqB,GAChD;MACE,GAAGL,KAAK;MACR,GAAGnC,UAAU;MACb,GAAGmC,KAAK,CAACnC;IACX,CAAC,GACDmC,KAAK,CACV,CAAC;EACJ,CAAC;EAED,MAAMM,OAAO,GAAIpB,QAAQ,IAAK;IAC5B,MAAMqB,UAAU,GAAGf,aAAa,CAACN,QAAQ,CAAC;IAC1C,MAAMsB,UAAU,GAAGjB,aAAa,EAAE;;IAElC;IACA,MAAMkB,cAAc,GAAGF,UAAU,GAAG,CAAC;IACrC,MAAMG,iBAAiB,GAAGF,UAAU,CAACC,cAAc,CAAC;IAEpD,IAAIC,iBAAiB,EAAE;MACrB,MAAMC,SAAS,GAAGrB,QAAQ,CAACoB,iBAAiB,CAAC;MAE7C,IAAIC,SAAS,CAACN,IAAI,KAAK,qBAAqB,EAAE;QAC5C,MAAMO,aAAa,GAAGD,SAAS,CAAC9C,UAAU,CAACmB,OAAO,GAAGA,OAAO;QAE5DlB,aAAa,CAAC;UAAEkB,OAAO,EAAE4B;QAAc,CAAC,CAAC;QACzC3B,UAAU,CAAC2B,aAAa,CAAC;QAEzBvB,WAAW,CAACqB,iBAAiB,CAAC;QAC9B;MACF;IACF;;IAEA;IACA,MAAMG,cAAc,GAAGN,UAAU,GAAG,CAAC;IACrC,MAAMO,iBAAiB,GAAGN,UAAU,CAACK,cAAc,CAAC;IAEpD,IAAIC,iBAAiB,EAAE;MACrB,MAAMC,SAAS,GAAGzB,QAAQ,CAACwB,iBAAiB,CAAC;MAE7C,IAAIC,SAAS,CAACV,IAAI,KAAK,qBAAqB,EAAE;QAC5C,MAAMO,aAAa,GAAG5B,OAAO,GAAG+B,SAAS,CAAClD,UAAU,CAACmB,OAAO;QAE5DlB,aAAa,CAAC;UAAEkB,OAAO,EAAE4B;QAAc,CAAC,CAAC;QACzC3B,UAAU,CAAC2B,aAAa,CAAC;QAEzBvB,WAAW,CAACyB,iBAAiB,CAAC;MAChC;IACF;EACF,CAAC;EAED,OAAO;IAAEpB,OAAO;IAAEO,SAAS;IAAEK;EAAQ,CAAC;AACxC,CAAC;AACD,iEAAevB,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;AClFI;AAKJ;AAC8C;AAE/E,MAAMuC,uBAAuB,GAAGC,IAAA,IAG1B;EAAA,IAH2B;IAC7B1D,UAAU;IACVC;EACJ,CAAC,GAAAyD,IAAA;EACG,MAAM;IAAEC;EAAW,CAAC,GAAG3D,UAAU;EAEjC,MAAM4D,kBAAkB,GAAIvD,KAAK,IAAK;IAClCJ,aAAa,CAAC;MAAE0D,UAAU,EAAEtD;IAAM,CAAC,CAAC;EACxC,CAAC;EAED,OACID,iEAAA,CAAC+C,sEAAiB,QACd/C,iEAAA,CAACkD,4DAAS;IAACO,KAAK,EAAEhE,mDAAE,CAAC,iBAAiB,EAAE,QAAQ;EAAE,GAC9CO,iEAAA,CAACoD,gEAAa;IACV/C,KAAK,EAAEZ,mDAAE,CAAC,aAAa,EAAE,QAAQ,CAAE;IACnCQ,KAAK,EAAEL,UAAU,CAAC8D,gBAAiB;IACnCC,OAAO,EAAE,CACL;MAAEtD,KAAK,EAAE,OAAO;MAAEJ,KAAK,EAAE;IAAQ,CAAC,EAClC;MAAEI,KAAK,EAAE,QAAQ;MAAEJ,KAAK,EAAE;IAAS,CAAC,EACpC;MAAEI,KAAK,EAAE,MAAM;MAAEJ,KAAK,EAAE;IAAO,CAAC,CAClC;IACFE,QAAQ,EAAGF,KAAK,IAAKJ,aAAa,CAAC;MAAE6D,gBAAgB,EAAEzD;IAAM,CAAC;EAAE,EAClE,CACM,EACZD,iEAAA,CAACkD,4DAAS;IAACO,KAAK,EAAEhE,mDAAE,CAAC,YAAY,EAAE,QAAQ;EAAE,GACzCO,iEAAA,CAACiD,mEAAc;IACXhD,KAAK,EAAEL,UAAU,CAACgE,QAAS;IAC3BzD,QAAQ,EAAGF,KAAK,IAAKJ,aAAa,CAAC;MAAE+D,QAAQ,EAAE3D;IAAM,CAAC,CAAE;IACxD4D,uBAAuB,EAAE;EAAK,EAChC,EACF7D,iEAAA,CAACmD,+DAAY;IACT9C,KAAK,EAAEZ,mDAAE,CAAC,aAAa,EAAE,QAAQ,CAAE;IACnCQ,KAAK,EAAEsD,UAAW;IAClBpD,QAAQ,EAAEqD,kBAAmB;IAC7BM,GAAG,EAAE,CAAE;IACPC,GAAG,EAAE,CAAE;IACPC,IAAI,EAAE;EAAI,EACZ,CACM,EACZhE,iEAAA,CAACgD,uEAAkB;IACfS,KAAK,EAAEhE,mDAAE,CAAC,gBAAgB,EAAE,QAAQ,CAAE;IACtCwE,WAAW,EAAE,KAAM;IACnBC,aAAa,EAAE,CACX;MACIjE,KAAK,EAAEL,UAAU,CAACuE,SAAS;MAC3BhE,QAAQ,EAAGF,KAAK,IAAKJ,aAAa,CAAC;QAAEsE,SAAS,EAAElE;MAAM,CAAC,CAAC;MACxDI,KAAK,EAAEZ,mDAAE,CAAC,YAAY,EAAE,QAAQ;IACpC,CAAC,EACD;MACIQ,KAAK,EAAEL,UAAU,CAACwE,eAAe;MACjCjE,QAAQ,EAAGF,KAAK,IAAKJ,aAAa,CAAC;QAAEuE,eAAe,EAAEnE;MAAM,CAAC,CAAC;MAC9DI,KAAK,EAAEZ,mDAAE,CAAC,kBAAkB,EAAE,QAAQ;IAC1C,CAAC;EACH,EAEe,CAEL;AAE5B,CAAC;AAED,iEAAe4D,uBAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrED;AACoB;AAC0B;AACK;AACrC;AAEF;;AAEjD;AAC2D;AACE;AACQ;AAEtD,SAASwB,IAAIA,CAAAvB,IAAA,EAKzB;EAAA,IAL0B;IAC3B1D,UAAU;IACVC,aAAa;IACbiF,UAAU;IACV7D;EACF,CAAC,GAAAqC,IAAA;EACC,MAAM;IAAEvC,OAAO,EAAEgE,WAAW;IAAE7E,SAAS;IAAE0D,QAAQ;IAAEO,SAAS;IAAEC;EAAgB,CAAC,GAAGxE,UAAU;EAE5F,MAAM,CAACE,SAAS,EAAEkF,YAAY,CAAC,GAAGT,4DAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACxD,OAAO,EAAEC,UAAU,CAAC,GAAGuD,4DAAQ,CAACQ,WAAW,IAAI,EAAE,CAAC;EAEzD,MAAM;IACJtD,OAAO;IACPY,OAAO;IACPL;EACF,CAAC,GAAGlB,oEAAkB,CAAClB,UAAU,EAAEmB,OAAO,EAAElB,aAAa,EAAEmB,UAAU,EAAEC,QAAQ,CAAC;EAChF,MAAMgE,WAAW,GAAGP,0DAAM,EAAE;EAC5B,MAAMQ,UAAU,GAAGb,sEAAa,EAAE;EAClC,MAAM;IAAEnD;EAAa,CAAC,GAAGR,4DAAW,CAACG,0DAAgB,CAAC;EACtD,MAAM;IAAEsE;EAAa,CAAC,GAAGzE,4DAAW,CAAC,cAAc,CAAC;EAEpD,MAAM0E,SAAS,GAAGzE,0DAAS,CAAEa,MAAM,IACjCA,MAAM,CAAC,aAAa,CAAC,CAAC6D,sBAAsB,CAAC,OAAO,CAAC,CACtD;EAED,MAAMC,cAAc,GAAG3E,0DAAS,CAAEa,MAAM,IACtCA,MAAM,CAACX,0DAAgB,CAAC,CAAC0E,SAAS,EAAE,CACrC;EAED,MAAMC,eAAe,GAAGF,cAAc,CAACG,MAAM,GAAG,CAAC,GAC7CH,cAAc,CACX1D,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CACZM,GAAG,CAAEH,KAAK,IAAKA,KAAK,CAACnC,UAAU,CAACmB,OAAO,CAAC,CACxC2E,IAAI,CAAC,IAAI,CAAC,GACb,EAAE;;EAEJ;EACA,MAAMC,gBAAgB,GAAIC,WAAW,IAAK;IACxC,IAAI,CAACA,WAAW,CAACC,OAAO,EAAE;IAE1B,MAAMC,KAAK,GAAGC,QAAQ,CAACC,WAAW,EAAE;IACpC,MAAMC,GAAG,GAAGC,MAAM,CAACC,YAAY,EAAE;IAEjC,IAAIpF,OAAO,KAAK,EAAE,EAAE;MAClB;MACA+E,KAAK,CAACM,QAAQ,CAACR,WAAW,CAACC,OAAO,EAAE,CAAC,CAAC;IACxC,CAAC,MAAM;MACL,MAAMQ,SAAS,GAAGT,WAAW,CAACC,OAAO,CAACQ,SAAS;MAC/C,IAAIA,SAAS,EAAE;QACb;QACAP,KAAK,CAACQ,aAAa,CAACD,SAAS,CAAC;MAChC;IACF;IAEAP,KAAK,CAACS,QAAQ,CAAC,IAAI,CAAC;IACpBN,GAAG,CAACO,eAAe,EAAE;IACrBP,GAAG,CAACQ,QAAQ,CAACX,KAAK,CAAC;IACnBF,WAAW,CAACC,OAAO,CAACa,KAAK,EAAE;EAC7B,CAAC;EAGHjC,6DAAS,CAAC,MAAM;IACdkB,gBAAgB,CAACV,WAAW,CAAC;IAC7BpF,aAAa,CAAC;MAAEkB;IAAQ,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACA,OAAO,EAAElB,aAAa,CAAC,CAAC;EAE5B,MAAME,eAAe,GAAGyE,+DAAW,CAAC,YAAY;IAC9CQ,YAAY,CAAC,IAAI,CAAC;IAElB,MAAM2B,MAAM,GAAI,UAASvB,SAAU,OAAMI,eAAgB,OAAMzE,OAAQ,EAAC;;IAExE;IACA,MAAM2C,gBAAgB,GAAG9D,UAAU,CAAC8D,gBAAgB;IAEpD,IAAI;MACF,MAAMkB,8DAAY,CAAC+B,MAAM,EAAE5F,OAAO,EAAEC,UAAU,EAAEE,YAAY,EAAED,QAAQ,EAAEyC,gBAAgB,CAAC;IAC3F,CAAC,CAAC,OAAOkD,KAAK,EAAE;MACdzB,YAAY,CAAC,OAAO,EAAG,2BAA0ByB,KAAK,CAACC,OAAQ,EAAC,CAAC;IACnE,CAAC,SAAS;MACR7B,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACjE,OAAO,EAAEqE,SAAS,EAAEI,eAAe,EAAExE,UAAU,EAAEE,YAAY,EAAED,QAAQ,EAAErB,UAAU,CAAC8D,gBAAgB,CAAC,CAAC;EAE1G,OACE1D,iEAAA,CAACsE,wDAAQ,QACPtE,iEAAA,CAACN,iEAAmB;IAClBE,UAAU,EAAEA,UAAW;IACvBC,aAAa,EAAEA,aAAc;IAC7BC,SAAS,EAAEA,SAAU;IACrBC,eAAe,EAAEA;EAAgB,EACjC,EACFC,iEAAA,CAACqD,qEAAuB;IACtBzD,UAAU,EAAEA,UAAW;IACvBC,aAAa,EAAEA;EAAc,EAC7B,EACFG,iEAAA,CAAC2E,6DAAQ;IACPmC,GAAG,EAAE7B,WAAY;IACjB8B,OAAO,EAAC,KAAK;IACb9G,KAAK,EAAEc,OAAQ;IACfZ,QAAQ,EAAG6G,UAAU,IAAK;MACxBhG,UAAU,CAACgG,UAAU,CAAC;MACtBnH,aAAa,CAAC;QAAEkB,OAAO,EAAEiG;MAAW,CAAC,CAAC;IACxC,CAAE;IACFC,SAAS,EAAC,oBAAoB;IAC9BC,WAAW,EAAEzH,mDAAE,CACb,uDAAuD,EACvD,QAAQ,CACR;IACFqF,UAAU,EAAEA,UAAW;IACvBqC,KAAK,EAAE;MACLC,SAAS,EAAElH,SAAS;MACpB0D,QAAQ,EAAEA,QAAQ;MAClByD,KAAK,EAAElD,SAAS;MAChBC,eAAe,EAAEA;IACnB,CAAE;IACF3C,OAAO,EAAEA,OAAQ;IACjBO,SAAS,EAAGC,MAAM,IAAKD,SAAS,CAACC,MAAM,EAAEhB,QAAQ,CAAE;IACnDqG,QAAQ,EAAEA,CAAA,KAAMtF,SAAS,CAAC,EAAE,CAAE;IAC9BK,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACpB,QAAQ;EAAE,EACjC,CACO;AAEf;;;;;;;;;;;;;;;;;;;ACvImD;AAEpC,SAASsG,IAAIA,CAAAjE,IAAA,EAAiB;EAAA,IAAhB;IAAE1D;EAAW,CAAC,GAAA0D,IAAA;EACvC,OACItD,iEAAA,CAAC2E,qEAAgB;IACboC,OAAO,EAAC,GAAG;IACX9G,KAAK,EAAEL,UAAU,CAACmB,OAAQ;IAC1BoG,KAAK,EAAE;MACHC,SAAS,EAAExH,UAAU,CAACM,SAAS;MAC/B0D,QAAQ,EAAEhE,UAAU,CAACgE,QAAQ;MAC7ByD,KAAK,EAAEzH,UAAU,CAACuE,SAAS;MAC3BC,eAAe,EAAExE,UAAU,CAACwE;IAChC;EAAE,EACJ;AAEV;;;;;;;;;;;;;;;;ACfgD;AAEhD,MAAMqD,cAAc,GAAG;EAAEC,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE;AAAE,CAAC;AACnE,MAAMC,cAAc,GAAG;EAAE,CAAC,EAAE,IAAI;EAAE,CAAC,EAAE,IAAI;EAAE,CAAC,EAAE,IAAI;EAAE,CAAC,EAAE,IAAI;EAAE,CAAC,EAAE,IAAI;EAAE,CAAC,EAAE;AAAK,CAAC;AAE/E,MAAMC,UAAU,GAAG;EACfC,IAAI,EAAE,CACF;IACIC,IAAI,EAAG,OAAO;IACdlG,MAAM,EAAE,CAAC,gBAAgB,CAAC;IAC1BmG,SAAS,EAAE9E,IAAA,IAAkB;MAAA,IAAhB;QAAEvC;MAAQ,CAAC,GAAAuC,IAAA;MACpB,OAAO7C,8DAAW,CAAC,qBAAqB,EAAE;QACtCM;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,EACD;IACIoH,IAAI,EAAG,OAAO;IACdlG,MAAM,EAAE,CAAC,cAAc,CAAC;IACxBmG,SAAS,EAAEC,KAAA,IAAyB;MAAA,IAAvB;QAAEtH,OAAO;QAAEuH;MAAM,CAAC,GAAAD,KAAA;MAC3B,OAAO5H,8DAAW,CAAC,qBAAqB,EAAE;QACtCM,OAAO;QACPwH,OAAO,EAAEP,cAAc,CAACM,KAAK;MACjC,CAAC,CAAC;IACN;EACJ,CAAC,CAEJ;EACDE,EAAE,EAAE,CACI;IACIL,IAAI,EAAE,OAAO;IACblG,MAAM,EAAE,CAAC,gBAAgB,CAAC;IAC1BmG,SAAS,EAAEK,KAAA,IAAkB;MAAA,IAAhB;QAAE1H;MAAQ,CAAC,GAAA0H,KAAA;MACpB,OAAOhI,8DAAW,CAAC,gBAAgB,EAAE;QACjCM;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,EACD;IACIoH,IAAI,EAAE,OAAO;IACblG,MAAM,EAAE,CAAC,cAAc,CAAC;IACxBmG,SAAS,EAAEM,KAAA,IAA2B;MAAA,IAAzB;QAAE3H,OAAO;QAAEwH;MAAQ,CAAC,GAAAG,KAAA;MAC7B,OAAOjI,8DAAW,CAAC,cAAc,EAAE;QAC/BM,OAAO;QACPuH,KAAK,EAAEb,cAAc,CAACkB,cAAc,CAACJ,OAAO,CAAC,GAAGd,cAAc,CAACc,OAAO,CAAC,GAAG;MAC9E,CAAC,CAAC;IACN;EACJ,CAAC;AAGb,CAAC;AAGD,iEAAeN,UAAU;;;;;;;;;;;;;;;;;ACrDuB;AAER;;AAExC;AACO,eAAerD,YAAYA,CAAC+B,MAAM,EAAE5F,OAAO,EAAEC,UAAU,EAAEE,YAAY,EAAED,QAAQ,EAAEyC,gBAAgB,EAAE;EACxG,MAAMmF,SAAS,GAAG,IAAID,mDAAY,CAACE,MAAM,CAAC;;EAE1C;EACA,IAAIC,MAAM,GAAG,EAAE;;EAEf;EACA,MAAMC,kBAAkB,GAAG,MAAOC,KAAK,IAAK;IAC1C,IAAIA,KAAK,CAACd,IAAI,KAAK,OAAO,EAAE;MAC1B,IAAIc,KAAK,CAACC,IAAI,KAAK,QAAQ,EAAE;QAC3B,IAAI;UAAA,IAAA5F,IAAA,EAAA+E,KAAA,EAAAc,oBAAA;UACF,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,KAAK,CAACC,IAAI,CAAC;;UAEzC;UACA,MAAMK,IAAI,IAAAjG,IAAA,IAAA+E,KAAA,IAAAc,oBAAA,GACRC,UAAU,CAACI,OAAO,CAAC,CAAC,CAAC,EAAED,IAAI,cAAAJ,oBAAA,cAAAA,oBAAA,GAC3BC,UAAU,CAACI,OAAO,CAAC,CAAC,CAAC,EAAE3C,OAAO,EAAE9F,OAAO,cAAAsH,KAAA,cAAAA,KAAA,GACvCe,UAAU,CAACI,OAAO,CAAC,CAAC,CAAC,EAAEC,KAAK,EAAE1I,OAAO,cAAAuC,IAAA,cAAAA,IAAA,GACrC,EAAE;;UAEJ;UACA,MAAMoG,aAAa,GAAGH,IAAI,CAACI,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;UAElD,IAAID,aAAa,EAAE;YACjBX,MAAM,IAAIW,aAAa;;YAEvB;YACA,IAAIX,MAAM,CAACa,QAAQ,CAAC,IAAI,CAAC,EAAE;cACzB,MAAMC,UAAU,GAAGd,MAAM,CAACe,KAAK,CAAC,KAAK,CAAC;cACtC,MAAMC,eAAe,GAAGF,UAAU,CAACG,MAAM,CAAEC,SAAS,IAAKA,SAAS,CAACC,IAAI,EAAE,KAAK,EAAE,CAAC;cAEjF,MAAMjI,MAAM,GAAG8H,eAAe,CAAC7H,GAAG,CAAE+H,SAAS,IAC3CxJ,8DAAW,CAAC,qBAAqB,EAAE;gBAAEM,OAAO,EAAEkJ;cAAU,CAAC,CAAC,CAC3D;;cAED;cACA,MAAM9H,KAAK,GAAGgI,EAAE,CAACjB,IAAI,CAAC1H,MAAM,CAAC,mBAAmB,CAAC,CAACD,aAAa,CAACN,QAAQ,CAAC;;cAEzE;cACA,IAAIF,OAAO,IAAIA,OAAO,KAAKgJ,eAAe,CAAC,CAAC,CAAC,EAAE;gBAC7C,MAAMK,YAAY,GAAG3J,8DAAW,CAAC,qBAAqB,EAAE;kBAAEM,OAAO,EAAEA,OAAO,GAAGgJ,eAAe,CAAC,CAAC;gBAAE,CAAC,CAAC;gBAClGI,EAAE,CAACjB,IAAI,CAACmB,QAAQ,CAAC,mBAAmB,CAAC,CAACC,YAAY,CAACrJ,QAAQ,EAAEmJ,YAAY,CAAC;;gBAE1E;gBACAlJ,YAAY,CAACe,MAAM,EAAEE,KAAK,GAAG,CAAC,CAAC;cACjC,CAAC,MAAM;gBACL;gBACAjB,YAAY,CAACe,MAAM,EAAEE,KAAK,CAAC;cAC7B;cACA;cACA4G,MAAM,GAAG,EAAE;YACb,CAAC,MAAM;cACL;cACA/H,UAAU,CAACD,OAAO,GAAGgI,MAAM,CAAC;YAE9B;UACA;QACF,CAAC,CACJ,OAAOwB,CAAC,EAAE;UACP,MAAM,IAAIC,KAAK,CAAC,sBAAsB,GAAGD,CAAC,CAAC1D,OAAO,CAAC;QACrD;MACF;IACF;EACF,CAAC;;EAED;EACA,IAAI4D,SAAS;EAEb,QAAQ/G,gBAAgB;IACtB,KAAK,OAAO;MACV+G,SAAS,GAAG,EAAE;MACd;IACF,KAAK,QAAQ;MACXA,SAAS,GAAG,EAAE;MACd;IACF,KAAK,MAAM;MACTA,SAAS,GAAG,EAAE;MACd;IACF;MACEA,SAAS,GAAG,EAAE;EAAC;;EAGnB;EACA,IAAI;IACF,MAAM5B,SAAS,CAAC6B,UAAU,CAAC/D,MAAM,EAAEqC,kBAAkB,EAAE;MAAE2B,UAAU,EAAEF;IAAU,CAAC,CAAC;EACnF,CAAC,CAAC,OAAO7D,KAAK,EAAE;IACd,MAAM,IAAI4D,KAAK,CAAC,yBAAyB,GAAG5D,KAAK,CAACC,OAAO,CAAC;EAC5D;AACF;;;;;;;;;;;;;;;AC7FkD;AAElD,MAAMgE,YAAY,GAAG,4BAA4B;AAEjD,MAAMjC,YAAY,CAAC;EACjBkC,WAAWA,CAACnH,OAAO,EAAE;IACnB,IAAI,CAACoH,MAAM,GAAGpH,OAAO,CAACqH,OAAO;IAC7B,IAAI,CAACC,KAAK,GAAGtH,OAAO,CAACsH,KAAK;IAC1B,IAAI,CAACC,WAAW,GAAGC,UAAU,CAACxH,OAAO,CAACuH,WAAW,CAAC;IAClD,IAAI,CAACE,KAAK,GAAGD,UAAU,CAACxH,OAAO,CAAC0H,IAAI,CAAC;IACrC,IAAI,CAACC,iBAAiB,GAAGH,UAAU,CAACxH,OAAO,CAAC4H,gBAAgB,CAAC;IAC7D,IAAI,CAACC,gBAAgB,GAAGL,UAAU,CAACxH,OAAO,CAAC8H,eAAe,CAAC;IAC3D,IAAI,CAACC,MAAM,GAAG/H,OAAO,CAAC+H,MAAM,KAAK,GAAG,GAAG,IAAI,GAAG,KAAK;EACrD;EAEAC,WAAWA,CAAA,EAAG;IACZ,IAAI,IAAI,CAACV,KAAK,KAAK,eAAe,IAAI,IAAI,CAACA,KAAK,KAAK,OAAO,EAAE;MAC5D,OAAQ,GAAEJ,YAAa,kBAAiB;IAC1C,CAAC,MAAM;MACL,OAAQ,GAAEA,YAAa,aAAY;IACrC;EACF;EAEA,MAAMH,UAAUA,CAAC/D,MAAM,EAAEiF,QAAQ,EAAgB;IAAA,IAAdjI,OAAO,GAAAkI,SAAA,CAAApG,MAAA,QAAAoG,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;IAC7C,MAAME,GAAG,GAAG,IAAI,CAACJ,WAAW,EAAE;IAE9B,MAAMK,IAAI,GAAG;MACXf,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BE,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBE,iBAAiB,EAAE,IAAI,CAACA,iBAAiB;MACzCE,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;MACvCE,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBO,CAAC,EAAE,CAAC;MACJtB,UAAU,EAAEhH,OAAO,CAACgH,UAAU;MAC9B,GAAGhH;IACL,CAAC;IAED,IAAI,IAAI,CAACsH,KAAK,KAAK,eAAe,IAAI,IAAI,CAACA,KAAK,KAAK,OAAO,EAAE;MAC5De,IAAI,CAACE,QAAQ,GAAG,CAAC;QAACC,IAAI,EAAC,MAAM;QAAEpL,OAAO,EAAC4F;MAAM,CAAC,CAAC;IACjD,CAAC,MAAM;MACLqF,IAAI,CAACrF,MAAM,GAAGA,MAAM;IACtB;IAEA,MAAMyF,cAAc,GAAG;MACrBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAAS,IAAI,CAACvB,MAAO;MACzC,CAAC;MACDiB,IAAI,EAAE3C,IAAI,CAACkD,SAAS,CAACP,IAAI;IAC3B,CAAC;IAED,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,EAAEK,cAAc,CAAC;MACjD,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;QAChB;QACA,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;QACvCC,OAAO,CAACjG,KAAK,CAAC,iCAAiC,EAAE+F,SAAS,CAAC;QAC3D,MAAM,IAAInC,KAAK,CAACgC,QAAQ,CAACM,UAAU,CAAC;MACtC;MAEA,MAAMC,MAAM,GAAGnC,gEAAY,CAACgB,QAAQ,CAAC;MACrC,MAAMoB,MAAM,GAAGR,QAAQ,CAACR,IAAI,CAACiB,SAAS,EAAE;MACxC,MAAMC,OAAO,GAAG,IAAIC,WAAW,EAAE;MAEjC,OAAO,IAAI,EAAE;QACX,MAAM;UAAEC,IAAI;UAAEnN;QAAM,CAAC,GAAG,MAAM+M,MAAM,CAACK,IAAI,EAAE;QAC3C,IAAID,IAAI,EAAE;UACR;QACF;QACAL,MAAM,CAACO,IAAI,CAACJ,OAAO,CAACK,MAAM,CAACtN,KAAK,CAAC,CAAC;MACpC;IACF,CAAC,CAAC,OAAO2G,KAAK,EAAE;MACdiG,OAAO,CAACjG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO,4CAA4C;IACrD;EACF;AACF;AAEA,iEAAegC,YAAY;;;;;;;;;;;AChF3B;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,kCAAkC;AAC3E;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwB;AACxB;;;;;;;;;;;;;;;;;UCzHA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;ACNsD;AACjB;AACd;AAEG;AACA;AACU;AACE;AAEtC4E,oEAAiB,CAACC,6CAAa,EAAE;EAChChK,KAAK,EAAEhE,mDAAE,CAACgO,8CAAc,CAAC;EACzBrN,IAAI,EAAEqN,6CAAa;EACnBC,QAAQ,EAAED,iDAAiB;EAC3BE,WAAW,EAAElO,mDAAE,CAACgO,oDAAoB,CAAC;EACrCxF,UAAU;EACV2F,QAAQ,EAAE;IACTC,IAAI,EAAE,IAAI;IACV5G,SAAS,EAAE;EACZ,CAAC;EACDrH,UAAU,EAAE6N,mDAAmB;EAC/BK,IAAI,EAAEjJ,6CAAI;EACVkJ,IAAI,EAAExG,6CAAIA;AAEX,CAAC,CAAC,C","sources":["webpack://andika/./src/components/blockcontrols.js","webpack://andika/./src/components/blockhandler.js","webpack://andika/./src/components/inspectorcontrols.js","webpack://andika/./src/edit.js","webpack://andika/./src/save.js","webpack://andika/./src/transforms.js","webpack://andika/./src/utils/andika-ai.js","webpack://andika/./src/utils/andika-api.js","webpack://andika/./src/editor.scss","webpack://andika/external window [\"wp\",\"blockEditor\"]","webpack://andika/external window [\"wp\",\"blocks\"]","webpack://andika/external window [\"wp\",\"components\"]","webpack://andika/external window [\"wp\",\"data\"]","webpack://andika/external window [\"wp\",\"element\"]","webpack://andika/external window [\"wp\",\"i18n\"]","webpack://andika/./node_modules/eventsource-parser/dist/index.js","webpack://andika/webpack/bootstrap","webpack://andika/webpack/runtime/compat get default export","webpack://andika/webpack/runtime/define property getters","webpack://andika/webpack/runtime/hasOwnProperty shorthand","webpack://andika/webpack/runtime/make namespace object","webpack://andika/./src/index.js"],"sourcesContent":["import { AlignmentToolbar, BlockControls } from '@wordpress/block-editor';\r\nimport { ToolbarGroup, ToolbarButton, Spinner } from '@wordpress/components';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nfunction AndikaBlockControls( props ) {\r\n    const {\r\n        attributes,\r\n        setAttributes,\r\n        isLoading,\r\n        onGenerateClick,\r\n    } = props;\r\n\r\n    return (\r\n        <BlockControls>\r\n            <ToolbarGroup>\r\n                <AlignmentToolbar\r\n                    value={attributes.alignment}\r\n                    onChange={(alignment) => setAttributes({ alignment })}\r\n                />\r\n                <ToolbarButton\r\n                    icon={isLoading ? <Spinner /> : 'lightbulb'}\r\n                    label={__('Generate Text', 'andika')}\r\n                    onClick={onGenerateClick}\r\n                    isPressed={isLoading}\r\n                    disabled={isLoading}\r\n                />\r\n            </ToolbarGroup>\r\n        \r\n        </BlockControls>\r\n    );\r\n};\r\n\r\nexport default AndikaBlockControls;","import { createBlock } from '@wordpress/blocks';\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport { store as blockEditorStore } from '@wordpress/block-editor';\r\n\r\nexport const AndikaBlockHandler = (attributes, content, setAttributes, setContent, clientId) => {\r\n  const { insertBlocks, replaceBlocks, removeBlock } = useDispatch(blockEditorStore);\r\n  const {\r\n    getBlock,   \r\n    getBlockOrder,\r\n    getBlockIndex,\r\n  } = useSelect((select) => select(blockEditorStore), []);\r\n \r\n  const onSplit = (value, isOriginal) => {\r\n    if (isOriginal) {\r\n      const updatedContent = content.slice(0, content.indexOf(value));\r\n      setAttributes({ content: updatedContent });\r\n      setContent(updatedContent);\r\n    }\r\n\r\n    const newAttributes = {\r\n      ...attributes,\r\n      content: value,\r\n    };\r\n\r\n    const block = createBlock(\"andika-block/andika\", newAttributes);\r\n    return block;\r\n  };\r\n\r\n  const onReplace = (blocks, clientId) => {\r\n    replaceBlocks(clientId, blocks.map((block, index) =>\r\n      (index === 0 && block.name === \"andika-block/andika\")\r\n        ? {\r\n            ...block,\r\n            ...attributes,\r\n            ...block.attributes,\r\n          }\r\n        : block\r\n    ));\r\n  };\r\n\r\n  const onMerge = (clientId) => {\r\n    const blockIndex = getBlockIndex(clientId);\r\n    const blockOrder = getBlockOrder();\r\n  \r\n    // Merge with the previous block\r\n    const prevBlockIndex = blockIndex - 1;\r\n    const prevBlockClientId = blockOrder[prevBlockIndex];\r\n  \r\n    if (prevBlockClientId) {\r\n      const prevBlock = getBlock(prevBlockClientId);\r\n  \r\n      if (prevBlock.name === \"andika-block/andika\") {\r\n        const mergedContent = prevBlock.attributes.content + content;\r\n  \r\n        setAttributes({ content: mergedContent });\r\n        setContent(mergedContent);\r\n  \r\n        removeBlock(prevBlockClientId);\r\n        return;\r\n      }\r\n    }\r\n  \r\n    // Merge with the next block\r\n    const nextBlockIndex = blockIndex + 1;\r\n    const nextBlockClientId = blockOrder[nextBlockIndex];\r\n  \r\n    if (nextBlockClientId) {\r\n      const nextBlock = getBlock(nextBlockClientId);\r\n  \r\n      if (nextBlock.name === \"andika-block/andika\") {\r\n        const mergedContent = content + nextBlock.attributes.content;\r\n  \r\n        setAttributes({ content: mergedContent });\r\n        setContent(mergedContent);\r\n  \r\n        removeBlock(nextBlockClientId);\r\n      }\r\n    }\r\n  };\r\n \r\n  return { onSplit, onReplace, onMerge };\r\n};\r\nexport default AndikaBlockHandler;","import { __ } from '@wordpress/i18n';\r\nimport {\r\n    InspectorControls,\r\n    PanelColorSettings,\r\n    FontSizePicker,\r\n} from '@wordpress/block-editor';\r\nimport { PanelBody, RangeControl, SelectControl } from '@wordpress/components';\r\n\r\nconst AndikaInspectorControls = ({\r\n    attributes,\r\n    setAttributes,\r\n}) => {\r\n    const { lineHeight } = attributes;     \r\n\r\n    const onChangeLineHeight = (value) => {\r\n        setAttributes({ lineHeight: value });\r\n    };\r\n\r\n    return (\r\n        <InspectorControls>\r\n            <PanelBody title={__('Andika Controls', 'andika')}>\r\n                <SelectControl\r\n                    label={__('Text Length', 'andika')}\r\n                    value={attributes.andikaTextLength}\r\n                    options={[\r\n                        { label: 'Short', value: 'short' },\r\n                        { label: 'Medium', value: 'medium' },\r\n                        { label: 'Long', value: 'long' },\r\n                    ]}\r\n                    onChange={(value) => setAttributes({ andikaTextLength: value })}\r\n                />\r\n            </PanelBody>\r\n            <PanelBody title={__('Typography', 'andika')}>           \r\n                <FontSizePicker\r\n                    value={attributes.fontSize}\r\n                    onChange={(value) => setAttributes({ fontSize: value })}\r\n                    __nextHasNoMarginBottom={true}\r\n                />\r\n                <RangeControl\r\n                    label={__('Line height', 'andika')}\r\n                    value={lineHeight}\r\n                    onChange={onChangeLineHeight}\r\n                    min={1}\r\n                    max={3}\r\n                    step={0.1}\r\n                />\r\n            </PanelBody>\r\n            <PanelColorSettings\r\n                title={__('Color settings', 'andika')}\r\n                initialOpen={false}\r\n                colorSettings={[\r\n                    {\r\n                        value: attributes.textColor,\r\n                        onChange: (value) => setAttributes({ textColor: value }),\r\n                        label: __('Text color', 'andika'),\r\n                    },\r\n                    {\r\n                        value: attributes.backgroundColor,\r\n                        onChange: (value) => setAttributes({ backgroundColor: value }),\r\n                        label: __('Background color', 'andika'),\r\n                    }\r\n                ]}\r\n            >\r\n            </PanelColorSettings>\r\n\r\n        </InspectorControls>\r\n    );\r\n};\r\n\r\nexport default AndikaInspectorControls;","import { __ } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useBlockProps, store as blockEditorStore } from '@wordpress/block-editor';\nimport { Fragment, useState, useCallback, useEffect, useRef } from '@wordpress/element';\nimport { RichText } from '@wordpress/block-editor';\n\nimport { generateText } from './utils/andika-ai';\n\n// Local imports\nimport AndikaBlockHandler from './components/blockhandler';\nimport AndikaBlockControls from './components/blockcontrols';\nimport AndikaInspectorControls from './components/inspectorcontrols';\n\nexport default function Edit({\n  attributes,\n  setAttributes,\n  isSelected,\n  clientId,\n}) {\n  const { content: contentAttr, alignment, fontSize, textColor, backgroundColor } = attributes;\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [content, setContent] = useState(contentAttr || '');\n\n  const {\n    onSplit,\n    onMerge,\n    onReplace,\n  } = AndikaBlockHandler(attributes, content, setAttributes, setContent, clientId);\n  const RichTextRef = useRef();\n  const blockProps = useBlockProps();\n  const { insertBlocks } = useDispatch(blockEditorStore);\n  const { createNotice } = useDispatch('core/notices');\n\n  const postTitle = useSelect((select) =>\n    select('core/editor').getEditedPostAttribute('title')\n  );\n\n  const previousBlocks = useSelect((select) =>\n    select(blockEditorStore).getBlocks()\n  );\n\n  const previousContent = previousBlocks.length > 0\n    ? previousBlocks\n        .slice(0, -1)\n        .map((block) => block.attributes.content)\n        .join('\\n')\n    : '';\n\n    // Function to set the caret position in the RichText component.\n    const setCaretPosition = (editableRef) => {\n      if (!editableRef.current) return;\n  \n      const range = document.createRange();\n      const sel = window.getSelection();\n  \n      if (content === '') {\n        // Set the caret to the start of the placeholder when the content is empty\n        range.setStart(editableRef.current, 0);\n      } else {\n        const lastChild = editableRef.current.lastChild;\n        if (lastChild) {\n          // Set the caret to the end of the content when content is not empty\n          range.setStartAfter(lastChild);\n        }\n      }\n  \n      range.collapse(true);\n      sel.removeAllRanges();\n      sel.addRange(range);\n      editableRef.current.focus();\n    };\n    \n\n  useEffect(() => {\n    setCaretPosition(RichTextRef);\n    setAttributes({ content });\n  }, [content, setAttributes]);\n\n  const onGenerateClick = useCallback(async () => {\n    setIsLoading(true);\n  \n    const prompt = `Title: ${postTitle}\\n\\n${previousContent}\\n\\n${content}`;\n\n    // Get the 'andikaTextLength' attribute\n    const andikaTextLength = attributes.andikaTextLength;\n  \n    try {\n      await generateText(prompt, content, setContent, insertBlocks, clientId, andikaTextLength);\n    } catch (error) {\n      createNotice('error', `Text generation failed: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [content, postTitle, previousContent, setContent, insertBlocks, clientId, attributes.andikaTextLength]);\n\n  return (\n    <Fragment>\n      <AndikaBlockControls\n        attributes={attributes}\n        setAttributes={setAttributes}\n        isLoading={isLoading}\n        onGenerateClick={onGenerateClick}\n      />\n      <AndikaInspectorControls\n        attributes={attributes}\n        setAttributes={setAttributes}\n      />\n      <RichText\n        ref={RichTextRef}\n        tagName=\"div\"\n        value={content}\n        onChange={(newContent) => {\n          setContent(newContent);\n          setAttributes({ content: newContent });\n        }}\n        className=\"andika-placeholder\"\n        placeholder={__(\n          'Type and click the lightbulb icon to generate text...',\n          'andika',\n        )}\n        isSelected={isSelected}\n        style={{\n          textAlign: alignment,\n          fontSize: fontSize,\n          color: textColor,\n          backgroundColor: backgroundColor,\n        }}\n        onSplit={onSplit}\n        onReplace={(blocks) => onReplace(blocks, clientId)}\n        onRemove={() => onReplace([])}\n        onMerge={() => onMerge(clientId)}\n      />\n    </Fragment>\n  );\n}","import { RichText } from '@wordpress/block-editor';\n\nexport default function Save({ attributes }) {\n    return (\n        <RichText.Content\n            tagName=\"p\"\n            value={attributes.content}\n            style={{\n                textAlign: attributes.alignment,\n                fontSize: attributes.fontSize,\n                color: attributes.textColor,\n                backgroundColor: attributes.backgroundColor,\n            }}\n        />\n    );\n}\n","import { createBlock } from \"@wordpress/blocks\";\r\n\r\nconst elementToLevel = { h1: 1, h2: 2, h3: 3, h4: 4, h5: 5, h6: 6 };\r\nconst levelToElement = { 1: 'h1', 2: 'h2', 3: 'h3', 4: 'h4', 5: 'h5', 6: 'h6' };\r\n\r\nconst transforms = {\r\n    from: [\r\n        {\r\n            type:  'block',\r\n            blocks: ['core/paragraph'],\r\n            transform: ( { content }) => {\r\n                return createBlock('andika-block/andika', {\r\n                    content,\r\n                });\r\n            },\r\n        },\r\n        {\r\n            type:  'block',\r\n            blocks: ['core/heading'],\r\n            transform: ( { content, level }) => {\r\n                return createBlock('andika-block/andika', {\r\n                    content,\r\n                    element: levelToElement[level],\r\n                });\r\n            }            \r\n        },\r\n        \r\n    ],\r\n    to: [\r\n            {\r\n                type: 'block',\r\n                blocks: ['core/paragraph'],\r\n                transform: ( { content }) => {\r\n                    return createBlock('core/paragraph', {\r\n                        content,\r\n                    });\r\n                },\r\n            },\r\n            {\r\n                type: 'block',\r\n                blocks: ['core/heading'],\r\n                transform: ( { content, element }) => {\r\n                    return createBlock('core/heading', {\r\n                        content,\r\n                        level: elementToLevel.hasOwnProperty(element) ? elementToLevel[element] : 2,\r\n                    });\r\n                },                \r\n            },\r\n            \r\n        ],\r\n};   \r\n\r\n\r\nexport default transforms;","import { createBlock } from '@wordpress/blocks';\r\n\r\nimport AndikaOpenAI from './andika-api';\r\n\r\n// Generates text using the Andika API and inserts it as blocks in the WordPress editor\r\nexport async function generateText(prompt, content, setContent, insertBlocks, clientId, andikaTextLength) {\r\n  const andikaAPI = new AndikaOpenAI(andika);\r\n\r\n  // Buffer to accumulate the generated text\r\n  let buffer = '';\r\n\r\n  // Handles the streaming events returned by the OpenAI API\r\n  const andikaStreamEvents = async (event) => {\r\n    if (event.type === 'event') {\r\n      if (event.data !== \"[DONE]\") {\r\n        try {\r\n          const parsedData = JSON.parse(event.data);\r\n  \r\n          // Extract the text from the parsed data\r\n          const text =\r\n            parsedData.choices[0]?.text ??\r\n            parsedData.choices[0]?.message?.content ??\r\n            parsedData.choices[0]?.delta?.content ??\r\n            '';\r\n  \r\n          // Remove leading newline characters\r\n          const sanitizedText = text.replace(/^\\n{1,2}/, '');          \r\n\r\n          if (sanitizedText) {\r\n            buffer += sanitizedText;\r\n  \r\n            // If the buffer contains newline characters, split and insert the paragraphs as blocks\r\n            if (buffer.includes('\\n')) {  \r\n              const paragraphs = buffer.split(/\\n+/);  \r\n              const validParagraphs = paragraphs.filter((paragraph) => paragraph.trim() !== '');  \r\n\r\n              const blocks = validParagraphs.map((paragraph) =>\r\n                createBlock('andika-block/andika', { content: paragraph })\r\n              );\r\n\r\n              // Save index of current block\r\n              const index = wp.data.select('core/block-editor').getBlockIndex(clientId);\r\n\r\n              // If we are appending content\r\n              if (content && content !== validParagraphs[0]) { \r\n                const updatedBlock = createBlock('andika-block/andika', { content: content + validParagraphs[0] });\r\n                wp.data.dispatch('core/block-editor').replaceBlock(clientId, updatedBlock);\r\n\r\n                // Insert the remaining blocks after the current block\r\n                insertBlocks(blocks, index + 1);\r\n              } else {\r\n                // Insert the blocks\r\n                insertBlocks(blocks, index);\r\n              }\r\n              // Clear the buffer\r\n              buffer = '';\r\n            } else {\r\n              // Append the buffer content\r\n              setContent(content + buffer);\r\n              \r\n            }\r\n            }\r\n          }       \r\n       catch (e) {\r\n          throw new Error('Error parsing JSON: ' + e.message);\r\n        }\r\n      }\r\n    }\r\n  };  \r\n\r\n  // Set the maximum number of tokens to generate based on the specified text length\r\n  let maxTokens;\r\n\r\n  switch (andikaTextLength) {\r\n    case 'short':\r\n      maxTokens = 24;\r\n      break;\r\n    case 'medium':\r\n      maxTokens = 48;\r\n      break;\r\n    case 'long':\r\n      maxTokens = 96;\r\n      break;\r\n    default:\r\n      maxTokens = 48;\r\n  }\r\n\r\n  // Call the Andika API to generate text and handle the streaming events\r\n  try {\r\n    await andikaAPI.andikaText(prompt, andikaStreamEvents, { max_tokens: maxTokens });\r\n  } catch (error) {\r\n    throw new Error('Error in generateText: ' + error.message);\r\n  }\r\n}","import { createParser } from \"eventsource-parser\";\r\n\r\nconst API_BASE_URL = 'https://api.openai.com/v1/';\r\n\r\nclass AndikaOpenAI {\r\n  constructor(options) {\r\n    this.apiKey = options.api_key;\r\n    this.model = options.model;\r\n    this.temperature = parseFloat(options.temperature);\r\n    this.top_p = parseFloat(options.topP);\r\n    this.frequency_penalty = parseFloat(options.frequencyPenalty);\r\n    this.presence_penalty = parseFloat(options.presencePenalty);\r\n    this.stream = options.stream === \"1\" ? true : false;\r\n  }\r\n\r\n  get_api_url() {\r\n    if (this.model === 'gpt-3.5-turbo' || this.model === 'gpt-4') {\r\n      return `${API_BASE_URL}chat/completions`;\r\n    } else {\r\n      return `${API_BASE_URL}completions`;\r\n    }\r\n  }\r\n\r\n  async andikaText(prompt, callback, options = {}) {\r\n    const url = this.get_api_url();\r\n\r\n    const body = {\r\n      model: this.model,\r\n      temperature: this.temperature,\r\n      top_p: this.top_p,\r\n      frequency_penalty: this.frequency_penalty,\r\n      presence_penalty: this.presence_penalty,\r\n      stream: this.stream,\r\n      n: 1,\r\n      max_tokens: options.max_tokens,\r\n      ...options,\r\n    };\r\n\r\n    if (this.model === 'gpt-3.5-turbo' || this.model === 'gpt-4') {\r\n      body.messages = [{role:'user', content:prompt}];\r\n    } else {\r\n      body.prompt = prompt;\r\n    }\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${this.apiKey}`,\r\n      },\r\n      body: JSON.stringify(body),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (!response.ok) {\r\n        // Log the error response\r\n        const errorData = await response.json();\r\n        console.error('Error response from OpenAI API:', errorData);\r\n        throw new Error(response.statusText);\r\n      }\r\n\r\n      const parser = createParser(callback)\r\n      const reader = response.body.getReader();\r\n      const decoder = new TextDecoder();        \r\n\r\n      while (true) {\r\n        const { done, value } = await reader.read();\r\n        if (done) {\r\n          break;\r\n        }\r\n        parser.feed(decoder.decode(value));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error generating text:', error);\r\n      return 'Error generating text! Check your API Key?';\r\n    }\r\n  }\r\n}\r\n\r\nexport default AndikaOpenAI;","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","function createParser(onParse) {\n  let isFirstChunk;\n  let buffer;\n  let startingPosition;\n  let startingFieldLength;\n  let eventId;\n  let eventName;\n  let data;\n  reset();\n  return {\n    feed,\n    reset\n  };\n  function reset() {\n    isFirstChunk = true;\n    buffer = \"\";\n    startingPosition = 0;\n    startingFieldLength = -1;\n    eventId = void 0;\n    eventName = void 0;\n    data = \"\";\n  }\n  function feed(chunk) {\n    buffer = buffer ? buffer + chunk : chunk;\n    if (isFirstChunk && hasBom(buffer)) {\n      buffer = buffer.slice(BOM.length);\n    }\n    isFirstChunk = false;\n    const length = buffer.length;\n    let position = 0;\n    let discardTrailingNewline = false;\n    while (position < length) {\n      if (discardTrailingNewline) {\n        if (buffer[position] === \"\\n\") {\n          ++position;\n        }\n        discardTrailingNewline = false;\n      }\n      let lineLength = -1;\n      let fieldLength = startingFieldLength;\n      let character;\n      for (let index = startingPosition; lineLength < 0 && index < length; ++index) {\n        character = buffer[index];\n        if (character === \":\" && fieldLength < 0) {\n          fieldLength = index - position;\n        } else if (character === \"\\r\") {\n          discardTrailingNewline = true;\n          lineLength = index - position;\n        } else if (character === \"\\n\") {\n          lineLength = index - position;\n        }\n      }\n      if (lineLength < 0) {\n        startingPosition = length - position;\n        startingFieldLength = fieldLength;\n        break;\n      } else {\n        startingPosition = 0;\n        startingFieldLength = -1;\n      }\n      parseEventStreamLine(buffer, position, fieldLength, lineLength);\n      position += lineLength + 1;\n    }\n    if (position === length) {\n      buffer = \"\";\n    } else if (position > 0) {\n      buffer = buffer.slice(position);\n    }\n  }\n  function parseEventStreamLine(lineBuffer, index, fieldLength, lineLength) {\n    if (lineLength === 0) {\n      if (data.length > 0) {\n        onParse({\n          type: \"event\",\n          id: eventId,\n          event: eventName || void 0,\n          data: data.slice(0, -1)\n          // remove trailing newline\n        });\n\n        data = \"\";\n        eventId = void 0;\n      }\n      eventName = void 0;\n      return;\n    }\n    const noValue = fieldLength < 0;\n    const field = lineBuffer.slice(index, index + (noValue ? lineLength : fieldLength));\n    let step = 0;\n    if (noValue) {\n      step = lineLength;\n    } else if (lineBuffer[index + fieldLength + 1] === \" \") {\n      step = fieldLength + 2;\n    } else {\n      step = fieldLength + 1;\n    }\n    const position = index + step;\n    const valueLength = lineLength - step;\n    const value = lineBuffer.slice(position, position + valueLength).toString();\n    if (field === \"data\") {\n      data += value ? \"\".concat(value, \"\\n\") : \"\\n\";\n    } else if (field === \"event\") {\n      eventName = value;\n    } else if (field === \"id\" && !value.includes(\"\\0\")) {\n      eventId = value;\n    } else if (field === \"retry\") {\n      const retry = parseInt(value, 10);\n      if (!Number.isNaN(retry)) {\n        onParse({\n          type: \"reconnect-interval\",\n          value: retry\n        });\n      }\n    }\n  }\n}\nconst BOM = [239, 187, 191];\nfunction hasBom(buffer) {\n  return BOM.every((charCode, index) => buffer.charCodeAt(index) === charCode);\n}\nexport { createParser };\n//# sourceMappingURL=index.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport './editor.scss';\n\nimport Edit from './edit';\nimport Save from './save';\nimport metadata from './block.json';\nimport transforms from './transforms';\n\nregisterBlockType(metadata.name, {\n\ttitle: __(metadata.title),\n\ticon: metadata.icon,\n\tcategory: metadata.category,\n\tdescription: __(metadata.description),\n\ttransforms,\n\tsupports: {\n\t\thtml: true,\n\t\tclassName: false,\n\t},\n\tattributes: metadata.attributes,\t\n\tedit: Edit,\n\tsave: Save,\n\t\n});\n"],"names":["AlignmentToolbar","BlockControls","ToolbarGroup","ToolbarButton","Spinner","__","AndikaBlockControls","props","attributes","setAttributes","isLoading","onGenerateClick","createElement","value","alignment","onChange","icon","label","onClick","isPressed","disabled","createBlock","useDispatch","useSelect","store","blockEditorStore","AndikaBlockHandler","content","setContent","clientId","insertBlocks","replaceBlocks","removeBlock","getBlock","getBlockOrder","getBlockIndex","select","onSplit","isOriginal","updatedContent","slice","indexOf","newAttributes","block","onReplace","blocks","map","index","name","onMerge","blockIndex","blockOrder","prevBlockIndex","prevBlockClientId","prevBlock","mergedContent","nextBlockIndex","nextBlockClientId","nextBlock","InspectorControls","PanelColorSettings","FontSizePicker","PanelBody","RangeControl","SelectControl","AndikaInspectorControls","_ref","lineHeight","onChangeLineHeight","title","andikaTextLength","options","fontSize","__nextHasNoMarginBottom","min","max","step","initialOpen","colorSettings","textColor","backgroundColor","useBlockProps","Fragment","useState","useCallback","useEffect","useRef","RichText","generateText","Edit","isSelected","contentAttr","setIsLoading","RichTextRef","blockProps","createNotice","postTitle","getEditedPostAttribute","previousBlocks","getBlocks","previousContent","length","join","setCaretPosition","editableRef","current","range","document","createRange","sel","window","getSelection","setStart","lastChild","setStartAfter","collapse","removeAllRanges","addRange","focus","prompt","error","message","ref","tagName","newContent","className","placeholder","style","textAlign","color","onRemove","Save","Content","elementToLevel","h1","h2","h3","h4","h5","h6","levelToElement","transforms","from","type","transform","_ref2","level","element","to","_ref3","_ref4","hasOwnProperty","AndikaOpenAI","andikaAPI","andika","buffer","andikaStreamEvents","event","data","_parsedData$choices$","parsedData","JSON","parse","text","choices","delta","sanitizedText","replace","includes","paragraphs","split","validParagraphs","filter","paragraph","trim","wp","updatedBlock","dispatch","replaceBlock","e","Error","maxTokens","andikaText","max_tokens","createParser","API_BASE_URL","constructor","apiKey","api_key","model","temperature","parseFloat","top_p","topP","frequency_penalty","frequencyPenalty","presence_penalty","presencePenalty","stream","get_api_url","callback","arguments","undefined","url","body","n","messages","role","requestOptions","method","headers","stringify","response","fetch","ok","errorData","json","console","statusText","parser","reader","getReader","decoder","TextDecoder","done","read","feed","decode","registerBlockType","metadata","category","description","supports","html","edit","save"],"sourceRoot":""}