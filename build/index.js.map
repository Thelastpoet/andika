{"version":3,"file":"index.js","mappings":"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,iEAAegC,iBAAiB;;;;;;;;;;;ACjFhC;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,kCAAkC;AAC3E;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwB;AACxB;;;;;;;;;;;;;;;;;UCzHA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;ACNsD;AACjB;AACd;AAEG;AACA;AACU;AACE;AAEtCgE,oEAAiB,CAACC,6CAAa,EAAE;EAChChJ,KAAK,EAAEhE,mDAAE,CAACgN,8CAAc,CAAC;EACzBrM,IAAI,EAAEqM,6CAAa;EACnBC,QAAQ,EAAED,iDAAiB;EAC3BE,WAAW,EAAElN,mDAAE,CAACgN,oDAAoB,CAAC;EACrC5E,UAAU;EACV+E,QAAQ,EAAE;IACTC,IAAI,EAAE,IAAI;IACVhG,SAAS,EAAE;EACZ,CAAC;EACDjH,UAAU,EAAE6M,mDAAmB;EAC/BK,IAAI,EAAEnI,6CAAI;EACVoI,IAAI,EAAE5F,6CAAIA;AAEX,CAAC,CAAC,C","sources":["webpack://andika/./src/components/blockcontrols.js","webpack://andika/./src/components/blockhandler.js","webpack://andika/./src/components/inspectorcontrols.js","webpack://andika/./src/edit.js","webpack://andika/./src/save.js","webpack://andika/./src/transforms.js","webpack://andika/./src/utils/andika-ai.js","webpack://andika/./src/utils/andika-api.js","webpack://andika/./src/editor.scss","webpack://andika/external window [\"wp\",\"blockEditor\"]","webpack://andika/external window [\"wp\",\"blocks\"]","webpack://andika/external window [\"wp\",\"components\"]","webpack://andika/external window [\"wp\",\"data\"]","webpack://andika/external window [\"wp\",\"element\"]","webpack://andika/external window [\"wp\",\"i18n\"]","webpack://andika/./node_modules/eventsource-parser/dist/index.js","webpack://andika/webpack/bootstrap","webpack://andika/webpack/runtime/compat get default export","webpack://andika/webpack/runtime/define property getters","webpack://andika/webpack/runtime/hasOwnProperty shorthand","webpack://andika/webpack/runtime/make namespace object","webpack://andika/./src/index.js"],"sourcesContent":["import { AlignmentToolbar, BlockControls } from '@wordpress/block-editor';\r\nimport { ToolbarGroup, ToolbarButton, Spinner } from '@wordpress/components';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nfunction AndikaBlockControls( props ) {\r\n    const {\r\n        attributes,\r\n        setAttributes,\r\n        isLoading,\r\n        onGenerateClick,\r\n    } = props;\r\n\r\n    return (\r\n        <BlockControls>\r\n            <ToolbarGroup>\r\n                <AlignmentToolbar\r\n                    value={attributes.alignment}\r\n                    onChange={(alignment) => setAttributes({ alignment })}\r\n                />\r\n                <ToolbarButton\r\n                    icon={isLoading ? <Spinner /> : 'lightbulb'}\r\n                    label={__('Generate Text', 'andika')}\r\n                    onClick={onGenerateClick}\r\n                    isPressed={isLoading}\r\n                    disabled={isLoading}\r\n                />\r\n            </ToolbarGroup>\r\n        \r\n        </BlockControls>\r\n    );\r\n};\r\n\r\nexport default AndikaBlockControls;\r\n","import { createBlock } from '@wordpress/blocks';\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport { store as blockEditorStore } from '@wordpress/block-editor';\r\n\r\nexport const AndikaBlockHandler = (attributes, content, setAttributes, setContent, clientId) => {\r\n  const { insertBlocks, replaceBlocks, removeBlock } = useDispatch(blockEditorStore);\r\n  const {\r\n    getBlock,   \r\n    getBlockOrder,\r\n    getBlockIndex,\r\n  } = useSelect((select) => select(blockEditorStore), []);\r\n \r\n  const onSplit = (value, isOriginal) => {\r\n    if (isOriginal) {\r\n      const updatedContent = content.slice(0, content.indexOf(value));\r\n      setAttributes({ content: updatedContent });\r\n      setContent(updatedContent);\r\n    }\r\n\r\n    const newAttributes = {\r\n      ...attributes,\r\n      content: value,\r\n    };\r\n\r\n    const block = createBlock(\"andika-block/andika\", newAttributes);\r\n    return block;\r\n  };\r\n\r\n  const onReplace = (blocks, clientId) => {\r\n    replaceBlocks(clientId, blocks.map((block, index) =>\r\n      (index === 0 && block.name === \"andika-block/andika\")\r\n        ? {\r\n            ...block,\r\n            ...attributes,\r\n            ...block.attributes,\r\n          }\r\n        : block\r\n    ));\r\n  };\r\n\r\n  const onMerge = (clientId) => {\r\n    const blockIndex = getBlockIndex(clientId);\r\n    const blockOrder = getBlockOrder();\r\n  \r\n    // Merge with the previous block\r\n    const prevBlockIndex = blockIndex - 1;\r\n    const prevBlockClientId = blockOrder[prevBlockIndex];\r\n  \r\n    if (prevBlockClientId) {\r\n      const prevBlock = getBlock(prevBlockClientId);\r\n  \r\n      if (prevBlock.name === \"andika-block/andika\") {\r\n        const mergedContent = prevBlock.attributes.content + content;\r\n  \r\n        setAttributes({ content: mergedContent });\r\n        setContent(mergedContent);\r\n  \r\n        removeBlock(prevBlockClientId);\r\n        return;\r\n      }\r\n    }\r\n  \r\n    // Merge with the next block\r\n    const nextBlockIndex = blockIndex + 1;\r\n    const nextBlockClientId = blockOrder[nextBlockIndex];\r\n  \r\n    if (nextBlockClientId) {\r\n      const nextBlock = getBlock(nextBlockClientId);\r\n  \r\n      if (nextBlock.name === \"andika-block/andika\") {\r\n        const mergedContent = content + nextBlock.attributes.content;\r\n  \r\n        setAttributes({ content: mergedContent });\r\n        setContent(mergedContent);\r\n  \r\n        removeBlock(nextBlockClientId);\r\n      }\r\n    }\r\n  };\r\n  \r\n  const onInsertAfter = (block) => {\r\n    const blockIndex = getBlockIndex(clientId);\r\n    const nextBlockIndex = blockIndex + 1;\r\n    insertBlocks(block, nextBlockIndex);\r\n  };\r\n \r\n  return { onSplit, onReplace, onMerge, onInsertAfter };\r\n};\r\nexport default AndikaBlockHandler;","import { __ } from '@wordpress/i18n';\r\nimport {\r\n    InspectorControls,\r\n    PanelColorSettings,\r\n    FontSizePicker,\r\n} from '@wordpress/block-editor';\r\nimport { PanelBody, RangeControl } from '@wordpress/components';\r\n\r\nconst AndikaInspectorControls = ({\r\n    attributes,\r\n    setAttributes,\r\n}) => {\r\n    const { lineHeight } = attributes;     \r\n\r\n    const onChangeLineHeight = (value) => {\r\n        setAttributes({ lineHeight: value });\r\n    };\r\n\r\n    return (\r\n        <InspectorControls>\r\n            <PanelBody title={__('Typography', 'andika')}>\r\n                <FontSizePicker\r\n                    value={attributes.fontSize}\r\n                    onChange={(value) => setAttributes({ fontSize: value })}\r\n                    __nextHasNoMarginBottom={true}\r\n                />\r\n                <RangeControl\r\n                    label={__('Line height', 'andika')}\r\n                    value={lineHeight}\r\n                    onChange={onChangeLineHeight}\r\n                    min={1}\r\n                    max={3}\r\n                    step={0.1}\r\n                />\r\n            </PanelBody>\r\n            <PanelColorSettings\r\n                title={__('Color settings', 'andika')}\r\n                initialOpen={false}\r\n                colorSettings={[\r\n                    {\r\n                        value: attributes.textColor,\r\n                        onChange: (value) => setAttributes({ textColor: value }),\r\n                        label: __('Text color', 'andika'),\r\n                    },\r\n                    {\r\n                        value: attributes.backgroundColor,\r\n                        onChange: (value) => setAttributes({ backgroundColor: value }),\r\n                        label: __('Background color', 'andika'),\r\n                    }\r\n                ]}\r\n            />\r\n\r\n        </InspectorControls>\r\n    );\r\n};\r\n\r\nexport default AndikaInspectorControls;","import { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { useBlockProps, store as blockEditorStore } from '@wordpress/block-editor';\nimport { Fragment, useState, useCallback, useEffect, useRef} from '@wordpress/element';\nimport { RichText } from '@wordpress/block-editor';\n\nimport { generateText } from './utils/andika-ai';\n\nimport AndikaBlockHandler from './components/blockhandler';\nimport AndikaBlockControls from './components/blockcontrols';\nimport AndikaInspectorControls from './components/inspectorcontrols';\n\nexport default function Edit({ attributes, setAttributes, isSelected, clientId }) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [content, setContent] = useState(attributes.content || '');\n    const { onSplit, onMerge, onReplace, onInsertAfter } = AndikaBlockHandler(attributes, content, setAttributes, setContent);\n    const RichTextRef = useRef();\n    const blockProps = useBlockProps();\n  \n    const postTitle = useSelect((select) =>\n      select('core/editor').getEditedPostAttribute('title')\n    );\n  \n    const previousBlocks = useSelect((select) =>\n      select(blockEditorStore).getBlocks()\n    );\n  \n    const previousContent = previousBlocks.length > 0\n      ? previousBlocks\n          .slice(0, -1)\n          .map((block) => block.attributes.content)\n          .join('\\n')\n      : \n    '';\n\n    const setCaretPosition = (editableRef) => {\n      if (!editableRef.current) return;\n    \n      const range = document.createRange();\n      const sel = window.getSelection();\n      \n      if (content === '') {\n        // Set the caret to the start of the placeholder when the content is empty\n        range.setStart(editableRef.current, 0);\n      } else {\n        const lastChild = editableRef.current.lastChild;\n        if (lastChild) {\n          // Set the caret to the end of the content when content is not empty\n          range.setStartAfter(lastChild);\n        }\n      }\n      \n      range.collapse(true);\n      sel.removeAllRanges();\n      sel.addRange(range);\n      editableRef.current.focus();\n    };    \n    \n    useEffect(() => {\n      setCaretPosition(RichTextRef);\n    }, [content]);\n\n    const onGenerateClick = useCallback(async () => {\n      setIsLoading(true);\n    \n      const prompt = `Title: ${postTitle}\\n\\n${previousContent}\\n\\n${content}`;\n    \n      try {\n        await generateText(prompt, content, setContent)\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    \n    }, [content, postTitle, previousContent]);                   \n  \n    return (\n      <Fragment>   \n        <AndikaBlockControls\n          attributes={attributes}\n          setAttributes={setAttributes}\n          isLoading={isLoading}\n          onGenerateClick={onGenerateClick}\n        />\n        <AndikaInspectorControls\n          attributes={attributes}\n          setAttributes={setAttributes}\n        />\n        <RichText\n          ref={RichTextRef}\n          tagName=\"p\"\n          value={content}\n          onChange={(newContent) => {\n            setAttributes({ content: newContent });\n          }}\n          className=\"andika-placeholder\"\n          placeholder={__(\n            'Type and click the lightbulb icon to generate text...',\n            'andika',\n          )}\n          isSelected={isSelected}\n          style={{\n            textAlign: attributes.alignment,\n            fontSize: attributes.fontSize,\n            color: attributes.textColor,\n            backgroundColor: attributes.backgroundColor,\n          }}\n          onSplit={onSplit}\n          onReplace={(blocks) => onReplace(blocks, clientId)}\n          onRemove={() => onReplace([])}\n          onMerge={() => onMerge(clientId)}\n        />      \n      </Fragment>\n    );\n  }\n","import { RichText } from '@wordpress/block-editor';\n\nexport default function Save({ attributes }) {\n    return (\n        <RichText.Content\n            tagName=\"p\"\n            value={attributes.content}\n            style={{\n                textAlign: attributes.alignment,\n                fontSize: attributes.fontSize,\n                color: attributes.textColor,\n                backgroundColor: attributes.backgroundColor,\n            }}\n        />\n    );\n}\n","import { createBlock } from \"@wordpress/blocks\";\r\n\r\nconst elementToLevel = { h1: 1, h2: 2, h3: 3, h4: 4, h5: 5, h6: 6 };\r\nconst levelToElement = { 1: 'h1', 2: 'h2', 3: 'h3', 4: 'h4', 5: 'h5', 6: 'h6' };\r\n\r\nconst transforms = {\r\n    from: [\r\n        {\r\n            type:  'block',\r\n            blocks: ['core/paragraph'],\r\n            transform: ( { content }) => {\r\n                return createBlock('andika-block/andika', {\r\n                    content,\r\n                });\r\n            },\r\n        },\r\n        {\r\n            type:  'block',\r\n            blocks: ['core/heading'],\r\n            transform: ( { content, level }) => {\r\n                return createBlock('andika-block/andika', {\r\n                    content,\r\n                    element: levelToElement[level],\r\n                });\r\n            }            \r\n        },\r\n        \r\n    ],\r\n    to: [\r\n            {\r\n                type: 'block',\r\n                blocks: ['core/paragraph'],\r\n                transform: ( { content }) => {\r\n                    return createBlock('core/paragraph', {\r\n                        content,\r\n                    });\r\n                },\r\n            },\r\n            {\r\n                type: 'block',\r\n                blocks: ['core/heading'],\r\n                transform: ( { content, element }) => {\r\n                    return createBlock('core/heading', {\r\n                        content,\r\n                        level: elementToLevel.hasOwnProperty(element) ? elementToLevel[element] : 2,\r\n                    });\r\n                },                \r\n            },\r\n            \r\n        ],\r\n};   \r\n\r\n\r\nexport default transforms;","import { __ } from '@wordpress/i18n';\r\n\r\nimport Andika_OpenAI_API from './andika-api';\r\n\r\nexport async function generateText(prompt, content, setContent) {\r\n  const andikaAPI = new Andika_OpenAI_API(andika);\r\n\r\n  // Callback function for the streaming events\r\n  const andikaStreamEvents = (event) => {\r\n    if (event.type === 'event') {\r\n      if (event.data !== \"[DONE]\") {        \r\n      try {\r\n        const parsedData = JSON.parse(event.data);\r\n        const choices = parsedData.choices || [];\r\n        const json = choices[0]?.text ?? choices[0]?.message?.content ?? choices[0]?.delta?.content ?? '';\r\n        setContent((prevContent) => prevContent + json);\r\n      } catch (e) {\r\n        console.error('Error parsing JSON', e);\r\n      }\r\n    }\r\n    }\r\n  };\r\n\r\n  try {\r\n    await andikaAPI.andika_text(prompt, andikaStreamEvents);\r\n  } catch (error) {\r\n    console.error('Error in generateText', error);\r\n  }\r\n}\r\n\r\n\r\n\r\n","import { createParser } from \"eventsource-parser\";\r\n\r\nconst API_BASE_URL = 'https://api.openai.com/v1/';\r\n\r\nclass Andika_OpenAI_API {\r\n  constructor(options) {\r\n    this.api_key = options.api_key;\r\n    this.model = options.model;\r\n    this.temperature = parseFloat(options.temperature);\r\n    this.max_tokens = parseInt(options.maxTokens, 10);\r\n    this.top_p = parseFloat(options.topP);\r\n    this.frequency_penalty = parseFloat(options.frequencyPenalty);\r\n    this.presence_penalty = parseFloat(options.presencePenalty);\r\n    this.stream = options.stream === \"1\" ? true : false;\r\n  }\r\n\r\n  get_api_url() {\r\n    if (this.model === 'gpt-3.5-turbo' || this.model === 'gpt-4') {\r\n      return `${API_BASE_URL}chat/completions`;\r\n    } else {\r\n      return `${API_BASE_URL}completions`;\r\n    }\r\n  }\r\n\r\n  async andika_text(prompt, callback, options = {}) {\r\n    const url = this.get_api_url();\r\n\r\n    const body = {\r\n      model: this.model,\r\n      temperature: this.temperature,\r\n      max_tokens: this.max_tokens,\r\n      top_p: this.top_p,\r\n      frequency_penalty: this.frequency_penalty,\r\n      presence_penalty: this.presence_penalty,\r\n      stream: this.stream,\r\n      n: 1,\r\n      ...options,\r\n    };\r\n\r\n    if (this.model === 'gpt-3.5-turbo' || this.model === 'gpt-4') {\r\n      body.messages = [{role:'user', content:prompt}];\r\n    } else {\r\n      body.prompt = prompt;\r\n    }\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${this.api_key}`,\r\n      },\r\n      body: JSON.stringify(body),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (!response.ok) {\r\n        // Log the error response\r\n        const errorData = await response.json();\r\n        console.error('Error response from OpenAI API:', errorData);\r\n        throw new Error(response.statusText);\r\n      }\r\n\r\n      const parser = createParser(callback)\r\n      const reader = response.body.getReader();\r\n      const decoder = new TextDecoder();        \r\n\r\n      while (true) {\r\n        const { done, value } = await reader.read();\r\n        if (done) {\r\n          break;\r\n        }\r\n        parser.feed(decoder.decode(value));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error generating text:', error);\r\n      return 'Error generating text! Check your API Key?';\r\n    }\r\n  }\r\n}\r\n\r\nexport default Andika_OpenAI_API;","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","function createParser(onParse) {\n  let isFirstChunk;\n  let buffer;\n  let startingPosition;\n  let startingFieldLength;\n  let eventId;\n  let eventName;\n  let data;\n  reset();\n  return {\n    feed,\n    reset\n  };\n  function reset() {\n    isFirstChunk = true;\n    buffer = \"\";\n    startingPosition = 0;\n    startingFieldLength = -1;\n    eventId = void 0;\n    eventName = void 0;\n    data = \"\";\n  }\n  function feed(chunk) {\n    buffer = buffer ? buffer + chunk : chunk;\n    if (isFirstChunk && hasBom(buffer)) {\n      buffer = buffer.slice(BOM.length);\n    }\n    isFirstChunk = false;\n    const length = buffer.length;\n    let position = 0;\n    let discardTrailingNewline = false;\n    while (position < length) {\n      if (discardTrailingNewline) {\n        if (buffer[position] === \"\\n\") {\n          ++position;\n        }\n        discardTrailingNewline = false;\n      }\n      let lineLength = -1;\n      let fieldLength = startingFieldLength;\n      let character;\n      for (let index = startingPosition; lineLength < 0 && index < length; ++index) {\n        character = buffer[index];\n        if (character === \":\" && fieldLength < 0) {\n          fieldLength = index - position;\n        } else if (character === \"\\r\") {\n          discardTrailingNewline = true;\n          lineLength = index - position;\n        } else if (character === \"\\n\") {\n          lineLength = index - position;\n        }\n      }\n      if (lineLength < 0) {\n        startingPosition = length - position;\n        startingFieldLength = fieldLength;\n        break;\n      } else {\n        startingPosition = 0;\n        startingFieldLength = -1;\n      }\n      parseEventStreamLine(buffer, position, fieldLength, lineLength);\n      position += lineLength + 1;\n    }\n    if (position === length) {\n      buffer = \"\";\n    } else if (position > 0) {\n      buffer = buffer.slice(position);\n    }\n  }\n  function parseEventStreamLine(lineBuffer, index, fieldLength, lineLength) {\n    if (lineLength === 0) {\n      if (data.length > 0) {\n        onParse({\n          type: \"event\",\n          id: eventId,\n          event: eventName || void 0,\n          data: data.slice(0, -1)\n          // remove trailing newline\n        });\n\n        data = \"\";\n        eventId = void 0;\n      }\n      eventName = void 0;\n      return;\n    }\n    const noValue = fieldLength < 0;\n    const field = lineBuffer.slice(index, index + (noValue ? lineLength : fieldLength));\n    let step = 0;\n    if (noValue) {\n      step = lineLength;\n    } else if (lineBuffer[index + fieldLength + 1] === \" \") {\n      step = fieldLength + 2;\n    } else {\n      step = fieldLength + 1;\n    }\n    const position = index + step;\n    const valueLength = lineLength - step;\n    const value = lineBuffer.slice(position, position + valueLength).toString();\n    if (field === \"data\") {\n      data += value ? \"\".concat(value, \"\\n\") : \"\\n\";\n    } else if (field === \"event\") {\n      eventName = value;\n    } else if (field === \"id\" && !value.includes(\"\\0\")) {\n      eventId = value;\n    } else if (field === \"retry\") {\n      const retry = parseInt(value, 10);\n      if (!Number.isNaN(retry)) {\n        onParse({\n          type: \"reconnect-interval\",\n          value: retry\n        });\n      }\n    }\n  }\n}\nconst BOM = [239, 187, 191];\nfunction hasBom(buffer) {\n  return BOM.every((charCode, index) => buffer.charCodeAt(index) === charCode);\n}\nexport { createParser };\n//# sourceMappingURL=index.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport './editor.scss';\n\nimport Edit from './edit';\nimport Save from './save';\nimport metadata from './block.json';\nimport transforms from './transforms';\n\nregisterBlockType(metadata.name, {\n\ttitle: __(metadata.title),\n\ticon: metadata.icon,\n\tcategory: metadata.category,\n\tdescription: __(metadata.description),\n\ttransforms,\n\tsupports: {\n\t\thtml: true,\n\t\tclassName: false,\n\t},\n\tattributes: metadata.attributes,\t\n\tedit: Edit,\n\tsave: Save,\n\t\n});\n"],"names":["AlignmentToolbar","BlockControls","ToolbarGroup","ToolbarButton","Spinner","__","AndikaBlockControls","props","attributes","setAttributes","isLoading","onGenerateClick","createElement","value","alignment","onChange","icon","label","onClick","isPressed","disabled","createBlock","useDispatch","useSelect","store","blockEditorStore","AndikaBlockHandler","content","setContent","clientId","insertBlocks","replaceBlocks","removeBlock","getBlock","getBlockOrder","getBlockIndex","select","onSplit","isOriginal","updatedContent","slice","indexOf","newAttributes","block","onReplace","blocks","map","index","name","onMerge","blockIndex","blockOrder","prevBlockIndex","prevBlockClientId","prevBlock","mergedContent","nextBlockIndex","nextBlockClientId","nextBlock","onInsertAfter","InspectorControls","PanelColorSettings","FontSizePicker","PanelBody","RangeControl","AndikaInspectorControls","_ref","lineHeight","onChangeLineHeight","title","fontSize","__nextHasNoMarginBottom","min","max","step","initialOpen","colorSettings","textColor","backgroundColor","useBlockProps","Fragment","useState","useCallback","useEffect","useRef","RichText","generateText","Edit","isSelected","setIsLoading","RichTextRef","blockProps","postTitle","getEditedPostAttribute","previousBlocks","getBlocks","previousContent","length","join","setCaretPosition","editableRef","current","range","document","createRange","sel","window","getSelection","setStart","lastChild","setStartAfter","collapse","removeAllRanges","addRange","focus","prompt","error","console","ref","tagName","newContent","className","placeholder","style","textAlign","color","onRemove","Save","Content","elementToLevel","h1","h2","h3","h4","h5","h6","levelToElement","transforms","from","type","transform","_ref2","level","element","to","_ref3","_ref4","hasOwnProperty","Andika_OpenAI_API","andikaAPI","andika","andikaStreamEvents","event","data","_choices$0$text","parsedData","JSON","parse","choices","json","text","message","delta","prevContent","e","andika_text","createParser","API_BASE_URL","constructor","options","api_key","model","temperature","parseFloat","max_tokens","parseInt","maxTokens","top_p","topP","frequency_penalty","frequencyPenalty","presence_penalty","presencePenalty","stream","get_api_url","callback","arguments","undefined","url","body","n","messages","role","requestOptions","method","headers","stringify","response","fetch","ok","errorData","Error","statusText","parser","reader","getReader","decoder","TextDecoder","done","read","feed","decode","registerBlockType","metadata","category","description","supports","html","edit","save"],"sourceRoot":""}