{"version":3,"file":"index.js","mappings":"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","sources":["webpack://andika/./src/edit.js","webpack://andika/./src/save.js","webpack://andika/./src/editor.scss?0339","webpack://andika/external window [\"wp\",\"blockEditor\"]","webpack://andika/external window [\"wp\",\"blocks\"]","webpack://andika/external window [\"wp\",\"components\"]","webpack://andika/external window [\"wp\",\"data\"]","webpack://andika/external window [\"wp\",\"element\"]","webpack://andika/external window [\"wp\",\"i18n\"]","webpack://andika/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://andika/webpack/bootstrap","webpack://andika/webpack/runtime/compat get default export","webpack://andika/webpack/runtime/define property getters","webpack://andika/webpack/runtime/hasOwnProperty shorthand","webpack://andika/webpack/runtime/make namespace object","webpack://andika/./src/index.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport {\n\tuseBlockProps,\n\tRichText,\n\tBlockControls,\n\tAlignmentToolbar,\n\tInspectorControls,\n    PanelColorSettings,\n    FontSizePicker,\n\n} from '@wordpress/block-editor';\nimport { ToolbarButton } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\nexport default function Edit({ attributes, setAttributes, isSelected }) {\n    const [isLoading, setIsLoading] = useState(false);\n\n    // Get the post title and previous block content\n    const postTitle = useSelect((select) =>\n        select('core/editor').getEditedPostAttribute('title')\n    );\n    const previousBlocks = useSelect((select) =>\n        select(blockEditorStore).getBlocks()\n    );\n    const previousContent = previousBlocks\n        .slice(0, -1)\n        .map((block) => block.attributes.content)\n        .join('\\n');\n\n\t\tconst generateText = async () => {\n\t\t\tsetIsLoading(true);\n\t\t\n\t\t\tlet prompt = '';\n\t\t\n\t\t\tif (!attributes.content && postTitle) {\n\t\t\t\t// If there is no content yet and the post has a title, generate text based on the title\n\t\t\t\tprompt = `Title: ${postTitle}\\n\\nContinue the article based on the title:`;\n\t\t\t} else {\n\t\t\t\t// If there is content, use the last two or three sentences to generate the next sentences\n\t\t\t\tconst lastSentences = attributes.content.match(/[^\\.!\\?]+[\\.!\\?]+/g).slice(-3).join(' ');\n\t\t\t\tprompt = `Title: ${postTitle}\\n\\n${previousContent}\\n\\n${lastSentences}\\n\\nContinue the article based on the title and the last sentences:`;\n\t\t\t}\n\t\t\n\t\t\tconst response = await fetch(andika.api_url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'X-WP-Nonce': andika.api_nonce,\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tprompt: prompt,\n\t\t\t\t\tmax_tokens: 300,\n\t\t\t\t}),\n\t\t\t});\n\t\t\n\t\t\tconst responseData = await response.json();\n\t\t\n\t\t\tconst newContent = attributes.content + responseData.generated_text;\n\t\t\tsetAttributes({ content: newContent });\n\t\t\n\t\t\tsetIsLoading(false);\n\t\t};\n\t\t\n    return (\n        <div {...useBlockProps()}>\n            <BlockControls>\n                <AlignmentToolbar\n                    value={attributes.alignment}\n                    onChange={(alignment) => setAttributes({ alignment })}\n                />\n                <ToolbarButton\n                    icon=\"lightbulb\"\n                    label={__('Generate Text', 'andika')}\n                    onClick={generateText}\n                    disabled={isLoading}\n                />\n            </BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelColorSettings\n\t\t\t\t\ttitle={__('Color settings', 'andika')}\n\t\t\t\t\tinitialOpen={false}\n\t\t\t\t\tcolorSettings={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: attributes.textColor,\n\t\t\t\t\t\t\tonChange: (textColor) => setAttributes({ textColor }),\n\t\t\t\t\t\t\tlabel: __('Text color', 'andika'),\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t\t<FontSizePicker\n\t\t\t\t\tvalue={attributes.fontSize}\n\t\t\t\t\tonChange={(fontSize) => setAttributes({ fontSize })}\n\t\t\t\t/>\n\t\t\t</InspectorControls>\n            <RichText\n                tagName=\"p\"\n                value={attributes.content}\n                onChange={(content) => setAttributes({ content })}\n                placeholder={__(\n                    'Start typing and click the lightbulb icon to generate text...',\n                    'andika',\n                )}\n                isSelected={isSelected}\n                style={{ textAlign: attributes.alignment, color: attributes.textColor, fontSize: attributes.fontSize ? `${attributes.fontSize}px` : undefined, }}\n                onSplit={(content, end) => {\n                    if (end === null) {\n                        setAttributes({ content });\n                    } else {\n                        setAttributes({ content: content + end });\n                    }\n                }}\n            />\n        </div>\n    );\n}","import { useBlockProps, RichText } from '@wordpress/block-editor';\n\nexport default function Save({ attributes }) {\n\tconst { content, alignment, textColor, fontSize } = attributes;\n\n\treturn (\n\t\t<RichText.Content\n\t\t\ttagName=\"p\"\n\t\t\tvalue={content}\n\t\t\tstyle={{\n\t\t\t\ttextAlign: alignment,\n\t\t\t\tcolor: textColor,\n\t\t\t\tfontSize: fontSize ? fontSize + 'px' : undefined,\n\t\t\t}}\n\t\t\t{...useBlockProps.save()}\n\t\t/>\n\t);\n}","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport './editor.scss';\n\nimport Edit from './edit';\nimport Save from './save';\nimport metadata from './block.json';\n\nregisterBlockType( metadata.name, {\n\ttitle: metadata.title,\n\ticon: metadata.icon,\n\tcategory: metadata.category,\n\tsupports: {\n\t\thtml: false,\n\t},\n\tattributes: metadata.attributes,\n\tedit: Edit,\n\tsave: Save,\n} );"],"names":["__","useBlockProps","RichText","BlockControls","AlignmentToolbar","InspectorControls","PanelColorSettings","FontSizePicker","ToolbarButton","useState","useSelect","store","blockEditorStore","Edit","_ref","attributes","setAttributes","isSelected","isLoading","setIsLoading","postTitle","select","getEditedPostAttribute","previousBlocks","getBlocks","previousContent","slice","map","block","content","join","generateText","prompt","lastSentences","match","response","fetch","andika","api_url","method","headers","api_nonce","body","JSON","stringify","max_tokens","responseData","json","newContent","generated_text","createElement","value","alignment","onChange","icon","label","onClick","disabled","title","initialOpen","colorSettings","textColor","fontSize","tagName","placeholder","style","textAlign","color","undefined","onSplit","end","Save","Content","_extends","save","registerBlockType","metadata","name","category","supports","html","edit"],"sourceRoot":""}