{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAqC;AAUJ;AACgC;AACnB;AACF;AACwB;AACtB;AAE/B,SAASe,IAAIA,CAAAC,IAAA,EAA4C;EAAA,IAA3C;IAAEC,UAAU;IAAEC,aAAa;IAAEC;EAAW,CAAC,GAAAH,IAAA;EAClE,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGX,4DAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMY,SAAS,GAAGX,0DAAS,CAAEY,MAAM,IAC/BA,MAAM,CAAC,aAAa,CAAC,CAACC,sBAAsB,CAAC,OAAO,CAAC,CACxD;EACD,MAAMC,cAAc,GAAGd,0DAAS,CAAEY,MAAM,IACpCA,MAAM,CAACV,0DAAgB,CAAC,CAACa,SAAS,EAAE,CACvC;EACD,MAAMC,eAAe,GAAGF,cAAc,CACjCG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CACZC,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACb,UAAU,CAACc,OAAO,CAAC,CACxCC,IAAI,CAAC,IAAI,CAAC;EAEjB,MAAMC,kBAAkB,GAAGA,CAAA,KAAMnB,6DAAY,CAACG,UAAU,EAAEK,SAAS,EAAEK,eAAe,EAAET,aAAa,EAAEG,YAAY,CAAC;EAEhH,OACIa,iEAAA,QAASjC,sEAAa,EAAE,EACpBiC,iEAAA,CAAC/B,kEAAa,QACV+B,iEAAA,CAAC9B,qEAAgB;IACb+B,KAAK,EAAElB,UAAU,CAACmB,SAAU;IAC5BC,QAAQ,EAAGD,SAAS,IAAKlB,aAAa,CAAC;MAAEkB;IAAU,CAAC;EAAE,EACxD,EACFF,iEAAA,CAAC1B,gEAAa;IACV8B,IAAI,EAAC,WAAW;IAChBC,KAAK,EAAEvC,mDAAE,CAAC,eAAe,EAAE,QAAQ,CAAE;IACrCwC,OAAO,EAAEP,kBAAmB;IAC5BQ,QAAQ,EAAErB;EAAU,EACtB,CACU,EACzBc,iEAAA,CAAC7B,sEAAiB,QACjB6B,iEAAA,CAAC5B,uEAAkB;IAClBoC,KAAK,EAAE1C,mDAAE,CAAC,OAAO,EAAE,QAAQ,CAAE;IAC7B2C,WAAW,EAAE,KAAM;IACnBC,aAAa,EAAE,CACd;MACCT,KAAK,EAAElB,UAAU,CAAC4B,SAAS;MAC3BR,QAAQ,EAAGQ,SAAS,IAAK3B,aAAa,CAAC;QAAE2B;MAAU,CAAC,CAAC;MACrDN,KAAK,EAAEvC,mDAAE,CAAC,YAAY,EAAE,QAAQ;IACjC,CAAC,EACD;MACsBmC,KAAK,EAAElB,UAAU,CAAC6B,eAAe;MACjCT,QAAQ,EAAGS,eAAe,IAAK5B,aAAa,CAAC;QAAE4B;MAAgB,CAAC,CAAC;MACjEP,KAAK,EAAEvC,mDAAE,CAAC,kBAAkB,EAAE,QAAQ;IAC1C,CAAC;EAClB,EACD,EACFkC,iEAAA,CAACzB,4DAAS;IAACiC,KAAK,EAAE1C,mDAAE,CAAC,YAAY,EAAE,QAAQ,CAAE;IAAC2C,WAAW,EAAE;EAAM,GACjDT,iEAAA,CAAC3B,mEAAc;IACX4B,KAAK,EAAElB,UAAU,CAAC8B,QAAS;IAC3BV,QAAQ,EAAGU,QAAQ,IAAK7B,aAAa,CAAC;MAAE6B;IAAS,CAAC;EAAE,EACtD,CACM,CACL,EACXb,iEAAA,CAAChC,6DAAQ;IACL8C,OAAO,EAAC,GAAG;IACXb,KAAK,EAAElB,UAAU,CAACc,OAAQ;IAC1BM,QAAQ,EAAGN,OAAO,IAAKb,aAAa,CAAC;MAAEa;IAAQ,CAAC,CAAE;IAClDkB,WAAW,EAAEjD,mDAAE,CACX,+DAA+D,EAC/D,QAAQ,CACV;IACFmB,UAAU,EAAEA,UAAW;IACvB+B,KAAK,EAAE;MACHC,SAAS,EAAElC,UAAU,CAACmB,SAAS;MAC/BgB,KAAK,EAAEnC,UAAU,CAAC4B,SAAS;MAC3BC,eAAe,EAAE7B,UAAU,CAAC6B,eAAe;MAC3CC,QAAQ,EAAE9B,UAAU,CAAC8B,QAAQ,GAAI,GAAE9B,UAAU,CAAC8B,QAAS,IAAG,GAAGM;IACjE,CAAE;IACFC,OAAO,EAAEA,CAACvB,OAAO,EAAEwB,GAAG,KAAK;MACvB,IAAIA,GAAG,KAAK,IAAI,EAAE;QACdrC,aAAa,CAAC;UAAEa;QAAQ,CAAC,CAAC;MAC9B,CAAC,MAAM;QACHb,aAAa,CAAC;UAAEa,OAAO,EAAEA,OAAO,GAAGwB;QAAI,CAAC,CAAC;MAC7C;IACJ;EAAE,EACJ,CACA;AAEd;;;;;;;;;;;;;;;;;;;;;ACjGkE;AAEnD,SAASC,IAAIA,CAAAxC,IAAA,EAAiB;EAAA,IAAhB;IAAEC;EAAW,CAAC,GAAAD,IAAA;EAC1C,MAAM;IAAEe,OAAO;IAAEK,SAAS;IAAES,SAAS;IAAEE;EAAS,CAAC,GAAG9B,UAAU;EAE9D,OACCiB,iEAAA,CAAChC,qEAAgB,EAAAwD,0EAAA;IAChBV,OAAO,EAAC,GAAG;IACXb,KAAK,EAAEJ,OAAQ;IACfmB,KAAK,EAAE;MACNC,SAAS,EAAEf,SAAS;MACpBgB,KAAK,EAAEP,SAAS;MAChBE,QAAQ,EAAEA,QAAQ,GAAGA,QAAQ,GAAG,IAAI,GAAGM;IACxC;EAAE,GACEpD,uEAAkB,EAAE,EACvB;AAEJ;;;;;;;;;;;;;;ACjBA,MAAMa,YAAY,GAAG,MAAAA,CAAOG,UAAU,EAAEK,SAAS,EAAEK,eAAe,EAAET,aAAa,EAAEG,YAAY,KAAK;EAChGA,YAAY,CAAC,IAAI,CAAC;EAElB,IAAIuC,MAAM,GAAG,EAAE;EAEf,IAAI,CAAC3C,UAAU,CAACc,OAAO,IAAIT,SAAS,EAAE;IAClCsC,MAAM,GAAI,UAAStC,SAAU,8CAA6C;EAC9E,CAAC,MAAM;IACH,MAAMuC,aAAa,GAAG5C,UAAU,CAACc,OAAO,CAAC+B,KAAK,CAAC,oBAAoB,CAAC,CAAClC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC;IACxF4B,MAAM,GAAI,UAAStC,SAAU,OAAMK,eAAgB,OAAMkC,aAAc,qEAAoE;EAC/I;EAEA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACC,MAAM,CAACC,OAAO,EAAE;IACzCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,YAAY,EAAEH,MAAM,CAACI;IACzB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBZ,MAAM,EAAEA,MAAM;MACda,UAAU,EAAE;IAChB,CAAC;EACL,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG,MAAMX,QAAQ,CAACY,IAAI,EAAE;EAE1C,MAAMC,UAAU,GAAG3D,UAAU,CAACc,OAAO,GAAG2C,YAAY,CAACG,cAAc;EACnE3D,aAAa,CAAC;IAAEa,OAAO,EAAE6C;EAAW,CAAC,CAAC;EAEtCvD,YAAY,CAAC,KAAK,CAAC;AACvB,CAAC;AAED,iEAAeP,YAAY;;;;;;;;;;;AChC3B;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAe;AACf;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;UCbA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNsD;AAC/B;AAEG;AACA;AACU;AAEpCgE,oEAAiB,CAAEC,6CAAa,EAAE;EACjCrC,KAAK,EAAEqC,8CAAc;EACrBzC,IAAI,EAAEyC,6CAAa;EACnBE,QAAQ,EAAEF,iDAAiB;EAC3BG,WAAW,EAAEH,oDAAoB;EACjCI,QAAQ,EAAE;IACTC,IAAI,EAAE;EACP,CAAC;EACDnE,UAAU,EAAE8D,mDAAmB;EAC/BM,IAAI,EAAEtE,6CAAI;EACV4C,IAAI,EAAEH,6CAAIA;AACX,CAAC,CAAE,C","sources":["webpack://andika/./src/edit.js","webpack://andika/./src/save.js","webpack://andika/./src/utils/jeneration.js","webpack://andika/./src/editor.scss?0339","webpack://andika/external window [\"wp\",\"blockEditor\"]","webpack://andika/external window [\"wp\",\"blocks\"]","webpack://andika/external window [\"wp\",\"components\"]","webpack://andika/external window [\"wp\",\"data\"]","webpack://andika/external window [\"wp\",\"element\"]","webpack://andika/external window [\"wp\",\"i18n\"]","webpack://andika/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://andika/webpack/bootstrap","webpack://andika/webpack/runtime/compat get default export","webpack://andika/webpack/runtime/define property getters","webpack://andika/webpack/runtime/hasOwnProperty shorthand","webpack://andika/webpack/runtime/make namespace object","webpack://andika/./src/index.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport {\n\tuseBlockProps,\n\tRichText,\n\tBlockControls,\n\tAlignmentToolbar,\n\tInspectorControls,\n    PanelColorSettings,\n    FontSizePicker,\n\n} from '@wordpress/block-editor';\nimport { ToolbarButton, PanelBody } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport generateText from './utils/jeneration';\n\nexport default function Edit({ attributes, setAttributes, isSelected }) {\n    const [isLoading, setIsLoading] = useState(false);\n\n    // Get the post title and previous block content\n    const postTitle = useSelect((select) =>\n        select('core/editor').getEditedPostAttribute('title')\n    );\n    const previousBlocks = useSelect((select) =>\n        select(blockEditorStore).getBlocks()\n    );\n    const previousContent = previousBlocks\n        .slice(0, -1)\n        .map((block) => block.attributes.content)\n        .join('\\n');\n\n\t\tconst handleGenerateText = () => generateText(attributes, postTitle, previousContent, setAttributes, setIsLoading);\n\t\t\n    return (\n        <div {...useBlockProps()}>\n            <BlockControls>\n                <AlignmentToolbar\n                    value={attributes.alignment}\n                    onChange={(alignment) => setAttributes({ alignment })}\n                />\n                <ToolbarButton\n                    icon=\"lightbulb\"\n                    label={__('Generate Text', 'andika')}\n                    onClick={handleGenerateText}\n                    disabled={isLoading}\n                />\n            </BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelColorSettings\n\t\t\t\t\ttitle={__('Color', 'andika')}\n\t\t\t\t\tinitialOpen={false}\n\t\t\t\t\tcolorSettings={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: attributes.textColor,\n\t\t\t\t\t\t\tonChange: (textColor) => setAttributes({ textColor }),\n\t\t\t\t\t\t\tlabel: __('Text color', 'andika'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n                            value: attributes.backgroundColor,\n                            onChange: (backgroundColor) => setAttributes({ backgroundColor }),\n                            label: __('Background color', 'andika'),\n                        },\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t\t<PanelBody title={__('Typography', 'andika')} initialOpen={false}>\n                    <FontSizePicker\n                        value={attributes.fontSize}\n                        onChange={(fontSize) => setAttributes({ fontSize })}\n                    />\n                </PanelBody>\n\t\t\t</InspectorControls>\n            <RichText\n                tagName=\"p\"\n                value={attributes.content}\n                onChange={(content) => setAttributes({ content })}\n                placeholder={__(\n                    'Start typing and click the lightbulb icon to generate text...',\n                    'andika',\n                )}\n                isSelected={isSelected}\n                style={{\n                    textAlign: attributes.alignment,\n                    color: attributes.textColor,\n                    backgroundColor: attributes.backgroundColor,\n                    fontSize: attributes.fontSize ? `${attributes.fontSize}px` : undefined,\n                }}\n                onSplit={(content, end) => {\n                    if (end === null) {\n                        setAttributes({ content });\n                    } else {\n                        setAttributes({ content: content + end });\n                    }\n                }}\n            />\n        </div>\n    );\n}","import { useBlockProps, RichText } from '@wordpress/block-editor';\n\nexport default function Save({ attributes }) {\n\tconst { content, alignment, textColor, fontSize } = attributes;\n\n\treturn (\n\t\t<RichText.Content\n\t\t\ttagName=\"p\"\n\t\t\tvalue={content}\n\t\t\tstyle={{\n\t\t\t\ttextAlign: alignment,\n\t\t\t\tcolor: textColor,\n\t\t\t\tfontSize: fontSize ? fontSize + 'px' : undefined,\n\t\t\t}}\n\t\t\t{...useBlockProps.save()}\n\t\t/>\n\t);\n}","const generateText = async (attributes, postTitle, previousContent, setAttributes, setIsLoading) => {\r\n    setIsLoading(true);\r\n\r\n    let prompt = '';\r\n\r\n    if (!attributes.content && postTitle) {\r\n        prompt = `Title: ${postTitle}\\n\\nContinue the article based on the title:`;\r\n    } else {\r\n        const lastSentences = attributes.content.match(/[^\\.!\\?]+[\\.!\\?]+/g).slice(-3).join(' ');\r\n        prompt = `Title: ${postTitle}\\n\\n${previousContent}\\n\\n${lastSentences}\\n\\nContinue the article based on the title and the last sentences:`;\r\n    }\r\n\r\n    const response = await fetch(andika.api_url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'X-WP-Nonce': andika.api_nonce,\r\n        },\r\n        body: JSON.stringify({\r\n            prompt: prompt,\r\n            max_tokens: 300,\r\n        }),\r\n    });\r\n\r\n    const responseData = await response.json();\r\n\r\n    const newContent = attributes.content + responseData.generated_text;\r\n    setAttributes({ content: newContent });\r\n\r\n    setIsLoading(false);\r\n};\r\n\r\nexport default generateText;","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport './editor.scss';\n\nimport Edit from './edit';\nimport Save from './save';\nimport metadata from './block.json';\n\nregisterBlockType( metadata.name, {\n\ttitle: metadata.title,\n\ticon: metadata.icon,\n\tcategory: metadata.category,\n\tdescription: metadata.description,\n\tsupports: {\n\t\thtml: false,\n\t},\n\tattributes: metadata.attributes,\n\tedit: Edit,\n\tsave: Save,\n} );"],"names":["__","useBlockProps","RichText","BlockControls","AlignmentToolbar","InspectorControls","PanelColorSettings","FontSizePicker","ToolbarButton","PanelBody","useState","useSelect","store","blockEditorStore","generateText","Edit","_ref","attributes","setAttributes","isSelected","isLoading","setIsLoading","postTitle","select","getEditedPostAttribute","previousBlocks","getBlocks","previousContent","slice","map","block","content","join","handleGenerateText","createElement","value","alignment","onChange","icon","label","onClick","disabled","title","initialOpen","colorSettings","textColor","backgroundColor","fontSize","tagName","placeholder","style","textAlign","color","undefined","onSplit","end","Save","Content","_extends","save","prompt","lastSentences","match","response","fetch","andika","api_url","method","headers","api_nonce","body","JSON","stringify","max_tokens","responseData","json","newContent","generated_text","registerBlockType","metadata","name","category","description","supports","html","edit"],"sourceRoot":""}