{"version":3,"file":"index.js","mappings":"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","sources":["webpack://andika/./src/edit.js","webpack://andika/./src/save.js","webpack://andika/./src/utils/jeneration.js","webpack://andika/./src/editor.scss?0339","webpack://andika/external window [\"wp\",\"blockEditor\"]","webpack://andika/external window [\"wp\",\"blocks\"]","webpack://andika/external window [\"wp\",\"components\"]","webpack://andika/external window [\"wp\",\"element\"]","webpack://andika/external window [\"wp\",\"i18n\"]","webpack://andika/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://andika/webpack/bootstrap","webpack://andika/webpack/runtime/compat get default export","webpack://andika/webpack/runtime/define property getters","webpack://andika/webpack/runtime/hasOwnProperty shorthand","webpack://andika/webpack/runtime/make namespace object","webpack://andika/./src/index.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport {\n\tuseBlockProps,\n\tRichText,\n\tBlockControls,\n\tAlignmentToolbar,\n\tInspectorControls,\n    PanelColorSettings,\n    FontSizePicker,\n\n} from '@wordpress/block-editor';\nimport { ToolbarButton, PanelBody } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\nimport generateText from './utils/jeneration';\n\nexport default function Edit({ attributes, setAttributes, isSelected }) {\n    const [isLoading] = useState(false);\n\n\tconst handleGenerateText = async () => {\n        const newContent = await generateText(attributes, attributes.content, setAttributes);\n        setAttributes({ content: newContent });\n    };\n\t\t\n    return (\n        <div {...useBlockProps()}>\n            <BlockControls>\n                <AlignmentToolbar\n                    value={attributes.alignment}\n                    onChange={(alignment) => setAttributes({ alignment })}\n                />\n                <ToolbarButton\n                    icon=\"lightbulb\"\n                    label={__('Generate Text', 'andika')}\n                    onClick={handleGenerateText}\n                    disabled={isLoading}\n                />\n            </BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelColorSettings\n\t\t\t\t\ttitle={__('Color', 'andika')}\n\t\t\t\t\tinitialOpen={false}\n\t\t\t\t\tcolorSettings={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: attributes.textColor,\n\t\t\t\t\t\t\tonChange: (textColor) => setAttributes({ textColor }),\n\t\t\t\t\t\t\tlabel: __('Text color', 'andika'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n                            value: attributes.backgroundColor,\n                            onChange: (backgroundColor) => setAttributes({ backgroundColor }),\n                            label: __('Background color', 'andika'),\n                        },\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t\t<PanelBody title={__('Typography', 'andika')} initialOpen={false}>\n                    <FontSizePicker\n                        value={attributes.fontSize}\n                        onChange={(fontSize) => setAttributes({ fontSize })}\n                    />\n                </PanelBody>\n\t\t\t</InspectorControls>\n            <RichText\n                tagName=\"p\"\n                value={attributes.content}\n                onChange={(content) => setAttributes({ content })}\n                placeholder={__(\n                    'Start typing and click the lightbulb icon to generate text...',\n                    'andika',\n                )}\n                isSelected={isSelected}\n                style={{\n                    textAlign: attributes.alignment,\n                    color: attributes.textColor,\n                    backgroundColor: attributes.backgroundColor,\n                    fontSize: attributes.fontSize ? `${attributes.fontSize}px` : undefined,\n                }}\n                onSplit={(content, end) => {\n                    if (end === null) {\n                        setAttributes({ content });\n                    } else {\n                        setAttributes({ content: content + end });\n                    }\n                }}\n            />\n        </div>\n    );\n}","import { useBlockProps, RichText } from '@wordpress/block-editor';\n\nexport default function Save({ attributes }) {\n    const { content, alignment, textColor, fontSize, direction } = attributes;\n\n    return (\n        <RichText.Content\n            tagName=\"p\"\n            value={content}\n            style={{\n                textAlign: alignment,\n                color: textColor,\n                fontSize: fontSize ? fontSize + 'px' : undefined,\n                direction: direction,\n            }}\n            {...useBlockProps.save()}\n        />\n    );\n}","const generateText = async (attributes, postTitle, previousContent, setAttributes, setIsLoading) => {\r\n    setIsLoading(true);\r\n\r\n    let prompt = '';\r\n\r\n    if (!attributes.content && postTitle) {\r\n        prompt = `Title: ${postTitle}\\n\\nContinue the article based on the title:`;\r\n    } else {\r\n        const lastParagraphs = attributes.content.match(/[^\\\\n]+\\\\n\\\\n/g);\r\n        const lastParagraphsText = lastParagraphs ? lastParagraphs.slice(-3).join(' ') : '';\r\n        const unfinishedParagraph = attributes.content.replace(lastParagraphsText, '').trim();\r\n        prompt = `Title: ${postTitle}\\n\\n${previousContent}\\n\\n${lastParagraphsText}\\n\\n${unfinishedParagraph}\\n\\nContinue the article based on the title, the last paragraphs, and the current unfinished paragraph:`;\r\n    }\r\n\r\n    const response = await fetch(andika.api_url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'X-WP-Nonce': andika.api_nonce,\r\n        },\r\n        body: JSON.stringify({\r\n            prompt: prompt,\r\n            max_tokens: andika.max_tokens,\r\n        }),\r\n    });\r\n\r\n    const responseData = await response.json();\r\n\r\n    const newContent = attributes.content + responseData.generated_text;\r\n    setAttributes({ content: newContent });\r\n\r\n    setIsLoading(false);\r\n};\r\n\r\nexport default generateText;","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport './editor.scss';\n\nimport Edit from './edit';\nimport Save from './save';\nimport metadata from './block.json';\n\nregisterBlockType( metadata.name, {\n\ttitle: metadata.title,\n\ticon: metadata.icon,\n\tcategory: metadata.category,\n\tdescription: metadata.description,\n\tsupports: {\n\t\thtml: false,\n\t},\n\tattributes: metadata.attributes,\n\tedit: Edit,\n\tsave: Save,\n} );"],"names":["__","useBlockProps","RichText","BlockControls","AlignmentToolbar","InspectorControls","PanelColorSettings","FontSizePicker","ToolbarButton","PanelBody","useState","generateText","Edit","_ref","attributes","setAttributes","isSelected","isLoading","handleGenerateText","newContent","content","createElement","value","alignment","onChange","icon","label","onClick","disabled","title","initialOpen","colorSettings","textColor","backgroundColor","fontSize","tagName","placeholder","style","textAlign","color","undefined","onSplit","end","Save","direction","Content","_extends","save","postTitle","previousContent","setIsLoading","prompt","lastParagraphs","match","lastParagraphsText","slice","join","unfinishedParagraph","replace","trim","response","fetch","andika","api_url","method","headers","api_nonce","body","JSON","stringify","max_tokens","responseData","json","generated_text","registerBlockType","metadata","name","category","description","supports","html","edit"],"sourceRoot":""}