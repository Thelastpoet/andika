{"version":3,"file":"index.js","mappings":"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","sources":["webpack://andika/./src/edit.js","webpack://andika/./src/save.js","webpack://andika/./src/editor.scss","webpack://andika/external window [\"wp\",\"blockEditor\"]","webpack://andika/external window [\"wp\",\"blocks\"]","webpack://andika/external window [\"wp\",\"components\"]","webpack://andika/external window [\"wp\",\"data\"]","webpack://andika/external window [\"wp\",\"element\"]","webpack://andika/external window [\"wp\",\"i18n\"]","webpack://andika/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://andika/webpack/bootstrap","webpack://andika/webpack/runtime/compat get default export","webpack://andika/webpack/runtime/define property getters","webpack://andika/webpack/runtime/hasOwnProperty shorthand","webpack://andika/webpack/runtime/make namespace object","webpack://andika/./src/index.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport {\n    useBlockProps,\n    RichText,\n    BlockControls,\n    AlignmentToolbar,\n    InspectorControls,\n    PanelColorSettings,\n    FontSizePicker,\n} from '@wordpress/block-editor';\nimport { ToolbarButton, PanelBody, Spinner } from '@wordpress/components';\nimport { useEffect, useRef, useState  } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\nexport default function Edit({ attributes, setAttributes, isSelected }) {\n    const [isLoading, setIsLoading] = useState(false);\n\n    // Get the post title and previous block content\n\tconst postTitle = useSelect((select) =>\n    select('core/editor').getEditedPostAttribute('title')\n    );\n    const previousBlocks = useSelect((select) =>\n        select(blockEditorStore).getBlocks()\n    );\n    const previousContent = previousBlocks\n        .slice(0, -1)\n        .map((block) => block.attributes.content)\n        .join('\\n');\n\n        const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n        const [currentText, setCurrentText] = useState(attributes.content);\n        const currentTextRef = useRef(currentText);\n        currentTextRef.current = currentText;\n\n        useEffect(() => {\n            setAttributes({ content: currentText });\n        }, [currentText]);\n\n        const setEndOfContentEditable = (contentEditableElement) => {\n            if (contentEditableElement) {\n                const range = document.createRange();\n                const selection = window.getSelection();\n                range.selectNodeContents(contentEditableElement);\n                range.collapse(false);\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n        };\n\n        const insertParagraphs = (text) => {\n            const sentences = text.split('.');\n            let paragraphs = '';\n            let currentParagraph = '';\n        \n            sentences.forEach((sentence, index) => {\n                currentParagraph += sentence + '.';\n        \n                const randomParagraphBreak = Math.floor(Math.random() * 5);\n                if (randomParagraphBreak <= 1 || index === sentences.length - 1) {\n                    paragraphs += '<p>' + currentParagraph + '</p>';\n                    currentParagraph = '';\n                }\n            });\n        \n            return paragraphs;\n        };        \n\n        const generateText = async () => {\n            setIsLoading(true);\n        \n            // Create the prompt using the post title and previous content\n            const prompt = `Title: ${postTitle}\\n\\n${previousContent}\\n\\n${attributes.content}`;\n        \n            const response = await fetch(andika.api_url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-WP-Nonce': andika.api_nonce,\n                },\n                body: JSON.stringify({\n                    prompt: prompt,\n                }),\n            });\n        \n            if (response.ok) {\n                const responseData = await response.json();\n                const words = responseData.generated_text.split(' ');        \n                \n                for (const word of words) {\n                    setCurrentText(currentTextRef.current + ' ' + word);\n                    await sleep(100); \n                } \n                            \n                // Set the caret position to the end after generating text\n                if (isSelected) {\n                    const element = document.querySelector('.andika-placeholder');\n                    setEndOfContentEditable(element);\n                }\n            } else {\n                const errorData = await response.json();\n                console.error(`Error: ${errorData.error}`);\n            }\n            setIsLoading(false);\n        };        \n\n    return (\n        <div {...useBlockProps()}>\n            <BlockControls>\n                <AlignmentToolbar\n                    value={attributes.alignment}\n                    onChange={(alignment) => setAttributes({ alignment })}\n                />\n                <ToolbarButton\n                    icon={isLoading ? <Spinner /> : \"lightbulb\"}\n                    label={__('Generate Text', 'andika')}\n                    onClick={generateText}\n                    disabled={isLoading}\n                />\n            </BlockControls>\n            <InspectorControls>\n                <PanelColorSettings\n                    title={__('Color', 'andika')}\n                    initialOpen={false}\n                    colorSettings={[\n                        {\n                            value: attributes.textColor,\n                            onChange: (textColor) => setAttributes({ textColor }),\n                            label: __('Text color', 'andika'),\n                        },\n                        {\n                            value: attributes.backgroundColor,\n                            onChange: (backgroundColor) => setAttributes({ backgroundColor }),\n                            label: __('Background color', 'andika'),\n                        },\n                    ]}\n                />\n                <PanelBody title={__('Typography', 'andika')} initialOpen={false}>\n                    <FontSizePicker\n                        value={attributes.fontSize}\n                        onChange={(fontSize) => setAttributes({ fontSize })}\n                    />\n                </PanelBody>\n            </InspectorControls>\n            <RichText\n                tagName=\"p\"\n                value={currentText}\n                onChange={(content) => {\n                    setAttributes({ content });\n                    setCurrentText(content);\n                }}\n                className=\"andika-placeholder\"\n                placeholder={__(\n                    'Start typing and click the lightbulb icon to generate text...',\n                    'andika',\n                )}\n                isSelected={isSelected}\n                style={{\n                    textAlign: attributes.alignment,\n                    color: attributes.textColor,\n                    backgroundColor: attributes.backgroundColor,\n                    fontSize: attributes.fontSize,\n                }}\n                onSplit={(content, end) => {\n                    if (end === null) {\n                        setAttributes({ content });\n                    } else {\n                        setAttributes({ content: content + end });\n                    }\n                }}\n            />\n        </div>\n    );\n}","import { useBlockProps, RichText } from '@wordpress/block-editor';\n\nexport default function Save({ attributes }) {\n    const { content, alignment, textColor, fontSize, direction } = attributes;\n\n    return (\n        <RichText.Content\n            tagName=\"p\"\n            value={content}\n            style={{\n                textAlign: alignment,\n                color: textColor,\n                fontSize: fontSize,\n                direction: direction,\n            }}\n            {...useBlockProps.save()}\n        />\n    );\n}","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport './editor.scss';\n\nimport Edit from './edit';\nimport Save from './save';\nimport metadata from './block.json';\n\nregisterBlockType( metadata.name, {\n\ttitle: __( metadata.title ),\n\ticon: metadata.icon,\n\tcategory: metadata.category,\n\tdescription: __( metadata.description ),\n\tsupports: {\n\t\thtml: false,\n\t},\n\tattributes: metadata.attributes,\n\tedit: Edit,\n\tsave: Save,\n} );"],"names":["__","useBlockProps","RichText","BlockControls","AlignmentToolbar","InspectorControls","PanelColorSettings","FontSizePicker","ToolbarButton","PanelBody","Spinner","useEffect","useRef","useState","useSelect","store","blockEditorStore","Edit","_ref","attributes","setAttributes","isSelected","isLoading","setIsLoading","postTitle","select","getEditedPostAttribute","previousBlocks","getBlocks","previousContent","slice","map","block","content","join","sleep","ms","Promise","resolve","setTimeout","currentText","setCurrentText","currentTextRef","current","setEndOfContentEditable","contentEditableElement","range","document","createRange","selection","window","getSelection","selectNodeContents","collapse","removeAllRanges","addRange","insertParagraphs","text","sentences","split","paragraphs","currentParagraph","forEach","sentence","index","randomParagraphBreak","Math","floor","random","length","generateText","prompt","response","fetch","andika","api_url","method","headers","api_nonce","body","JSON","stringify","ok","responseData","json","words","generated_text","word","element","querySelector","errorData","console","error","createElement","value","alignment","onChange","icon","label","onClick","disabled","title","initialOpen","colorSettings","textColor","backgroundColor","fontSize","tagName","className","placeholder","style","textAlign","color","onSplit","end","Save","direction","Content","_extends","save","registerBlockType","metadata","name","category","description","supports","html","edit"],"sourceRoot":""}